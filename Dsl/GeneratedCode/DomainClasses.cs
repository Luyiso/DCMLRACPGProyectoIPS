//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using DslModeling = global::Microsoft.VisualStudio.Modeling;
using DslDesign = global::Microsoft.VisualStudio.Modeling.Design;
namespace UPM_IPS.DCMLRACPGProyectoIPS
{
	/// <summary>
	/// DomainClass TapizModelo
	/// The root in which all other elements are embedded. Appears as a diagram.
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.DCMLRACPGProyectoIPS.TapizModelo.DisplayName", typeof(global::UPM_IPS.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "UPM_IPS.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.DCMLRACPGProyectoIPS.TapizModelo.Description", typeof(global::UPM_IPS.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "UPM_IPS.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("a9196261-abbf-4bbc-8c83-783ad3efa0c7")]
	public partial class TapizModelo : DslModeling::ModelElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// TapizModelo domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xa9196261, 0xabbf, 0x4bbc, 0x8c, 0x83, 0x78, 0x3a, 0xd3, 0xef, 0xa0, 0xc7);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public TapizModelo(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public TapizModelo(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region Clase opposite domain role accessor
		
		/// <summary>
		/// Gets a list of Clase.
		/// Description for UPM_IPS.DCMLRACPGProyectoIPS.TapizModeloHasClase.TapizModelo
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<Clase> Clase
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<Clase>, Clase>(global::UPM_IPS.DCMLRACPGProyectoIPS.TapizModeloHasClase.TapizModeloDomainRoleId);
			}
		}
		#endregion
		#region ElementGroupPrototype Merge methods
		/// <summary>
		/// Returns a value indicating whether the source element represented by the
		/// specified root ProtoElement can be added to this element.
		/// </summary>
		/// <param name="rootElement">
		/// The root ProtoElement representing a source element.  This can be null, 
		/// in which case the ElementGroupPrototype does not contain an ProtoElements
		/// and the code should inspect the ElementGroupPrototype context information.
		/// </param>
		/// <param name="elementGroupPrototype">The ElementGroupPrototype that contains the root ProtoElement.</param>
		/// <returns>true if the source element represented by the ProtoElement can be added to this target element.</returns>
		protected override bool CanMerge(DslModeling::ProtoElementBase rootElement, DslModeling::ElementGroupPrototype elementGroupPrototype)
		{
			if ( elementGroupPrototype == null ) throw new global::System.ArgumentNullException("elementGroupPrototype");
			
			if (rootElement != null)
			{
				DslModeling::DomainClassInfo rootElementDomainInfo = this.Partition.DomainDataDirectory.GetDomainClass(rootElement.DomainClassId);
				
				if (rootElementDomainInfo.IsDerivedFrom(global::UPM_IPS.DCMLRACPGProyectoIPS.Clase.DomainClassId)) 
				{
					return true;
				}
			}
			return base.CanMerge(rootElement, elementGroupPrototype);
		}
		
		/// <summary>
		/// Called by the Merge process to create a relationship between 
		/// this target element and the specified source element. 
		/// Typically, a parent-child relationship is established
		/// between the target element (the parent) and the source element 
		/// (the child), but any relationship can be established.
		/// </summary>
		/// <param name="sourceElement">The element that is to be related to this model element.</param>
		/// <param name="elementGroup">The group of source ModelElements that have been rehydrated into the target store.</param>
		/// <remarks>
		/// This method is overriden to create the relationship between the target element and the specified source element.
		/// The base method does nothing.
		/// </remarks>
		protected override void MergeRelate(DslModeling::ModelElement sourceElement, DslModeling::ElementGroup elementGroup)
		{
			// In general, sourceElement is allowed to be null, meaning that the elementGroup must be parsed for special cases.
			// However this is not supported in generated code.  Use double-deriving on this class and then override MergeRelate completely if you 
			// need to support this case.
			if ( sourceElement == null ) throw new global::System.ArgumentNullException("sourceElement");
		
				
			global::UPM_IPS.DCMLRACPGProyectoIPS.Clase sourceClase1 = sourceElement as global::UPM_IPS.DCMLRACPGProyectoIPS.Clase;
			if (sourceClase1 != null)
			{
				// Create link for path TapizModeloHasClase.Clase
				this.Clase.Add(sourceClase1);

				return;
			}
		
			// Sdk workaround to runtime bug #879350 (DSL: can't copy and paste a MEL that has a MEX). Avoid MergeRelate on ModelElementExtension
			// during a "Paste".
			if (sourceElement is DslModeling::ExtensionElement
				&& sourceElement.Store.TransactionManager.CurrentTransaction.TopLevelTransaction.Context.ContextInfo.ContainsKey("{9DAFD42A-DC0E-4d78-8C3F-8266B2CF8B33}"))
			{
				return;
			}
		
			// Fall through to base class if this class hasn't handled the merge.
			base.MergeRelate(sourceElement, elementGroup);
		}
		
		/// <summary>
		/// Performs operation opposite to MergeRelate - i.e. disconnects a given
		/// element from the current one (removes links created by MergeRelate).
		/// </summary>
		/// <param name="sourceElement">Element to be unmerged/disconnected.</param>
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1800:DoNotCastUnnecessarily")]
		protected override void MergeDisconnect(DslModeling::ModelElement sourceElement)
		{
			if (sourceElement == null) throw new global::System.ArgumentNullException("sourceElement");
				
			global::UPM_IPS.DCMLRACPGProyectoIPS.Clase sourceClase1 = sourceElement as global::UPM_IPS.DCMLRACPGProyectoIPS.Clase;
			if (sourceClase1 != null)
			{
				// Delete link for path TapizModeloHasClase.Clase
				
				foreach (DslModeling::ElementLink link in global::UPM_IPS.DCMLRACPGProyectoIPS.TapizModeloHasClase.GetLinks((global::UPM_IPS.DCMLRACPGProyectoIPS.TapizModelo)this, sourceClase1))
				{
					// Delete the link, but without possible delete propagation to the element since it's moving to a new location.
					link.Delete(global::UPM_IPS.DCMLRACPGProyectoIPS.TapizModeloHasClase.TapizModeloDomainRoleId, global::UPM_IPS.DCMLRACPGProyectoIPS.TapizModeloHasClase.ClaseDomainRoleId);
				}

				return;
			}
			// Fall through to base class if this class hasn't handled the unmerge.
			base.MergeDisconnect(sourceElement);
		}
		#endregion
	}
}
namespace UPM_IPS.DCMLRACPGProyectoIPS
{
	/// <summary>
	/// DomainClass Atributo
	/// Description for UPM_IPS.DCMLRACPGProyectoIPS.Atributo
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.DCMLRACPGProyectoIPS.Atributo.DisplayName", typeof(global::UPM_IPS.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "UPM_IPS.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.DCMLRACPGProyectoIPS.Atributo.Description", typeof(global::UPM_IPS.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "UPM_IPS.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[global::System.Diagnostics.DebuggerDisplay("{GetType().Name,nq} (Name = {namePropertyStorage})")]
	[DslModeling::DomainObjectId("b808156b-94b6-4757-a31c-c9cce157e055")]
	public partial class Atributo : AtributoEnriquecido
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// Atributo domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xb808156b, 0x94b6, 0x4757, 0xa3, 0x1c, 0xc9, 0xcc, 0xe1, 0x57, 0xe0, 0x55);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public Atributo(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public Atributo(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region Name domain property code
		
		/// <summary>
		/// Name domain property Id.
		/// </summary>
		public static readonly global::System.Guid NameDomainPropertyId = new global::System.Guid(0xd4dbbb2f, 0xbc92, 0x4478, 0x84, 0xb6, 0xc9, 0x1e, 0xe3, 0x41, 0x4e, 0x5f);
		
		/// <summary>
		/// Storage for Name
		/// </summary>
		private global::System.String namePropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of Name domain property.
		/// Description for UPM_IPS.DCMLRACPGProyectoIPS.Atributo.Name
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.DCMLRACPGProyectoIPS.Atributo/Name.DisplayName", typeof(global::UPM_IPS.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "UPM_IPS.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.DCMLRACPGProyectoIPS.Atributo/Name.Description", typeof(global::UPM_IPS.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "UPM_IPS.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::ElementName]
		[DslModeling::DomainObjectId("d4dbbb2f-bc92-4478-84b6-c91ee3414e5f")]
		public global::System.String Name
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return namePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				NamePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the Atributo.Name domain property.
		/// </summary>
		internal sealed partial class NamePropertyHandler : DslModeling::DomainPropertyValueHandler<Atributo, global::System.String>
		{
			private NamePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the Atributo.Name domain property value handler.
			/// </summary>
			public static readonly NamePropertyHandler Instance = new NamePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the Atributo.Name domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return NameDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(Atributo element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.namePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(Atributo element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.namePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region TipoDatos domain property code
		
		/// <summary>
		/// TipoDatos domain property Id.
		/// </summary>
		public static readonly global::System.Guid TipoDatosDomainPropertyId = new global::System.Guid(0xf60a84b4, 0x1705, 0x431e, 0x90, 0x50, 0x3e, 0xcf, 0x54, 0x8f, 0x68, 0x99);
		
		/// <summary>
		/// Storage for TipoDatos
		/// </summary>
		private global::System.String tipoDatosPropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of TipoDatos domain property.
		/// Description for UPM_IPS.DCMLRACPGProyectoIPS.Atributo.Tipo Datos
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.DCMLRACPGProyectoIPS.Atributo/TipoDatos.DisplayName", typeof(global::UPM_IPS.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "UPM_IPS.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.DCMLRACPGProyectoIPS.Atributo/TipoDatos.Description", typeof(global::UPM_IPS.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "UPM_IPS.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("f60a84b4-1705-431e-9050-3ecf548f6899")]
		public global::System.String TipoDatos
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return tipoDatosPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				TipoDatosPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the Atributo.TipoDatos domain property.
		/// </summary>
		internal sealed partial class TipoDatosPropertyHandler : DslModeling::DomainPropertyValueHandler<Atributo, global::System.String>
		{
			private TipoDatosPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the Atributo.TipoDatos domain property value handler.
			/// </summary>
			public static readonly TipoDatosPropertyHandler Instance = new TipoDatosPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the Atributo.TipoDatos domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return TipoDatosDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(Atributo element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.tipoDatosPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(Atributo element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.tipoDatosPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region NameTipo domain property code
		
		/// <summary>
		/// NameTipo domain property Id.
		/// </summary>
		public static readonly global::System.Guid NameTipoDomainPropertyId = new global::System.Guid(0x36b74ff4, 0x5b2a, 0x458f, 0xac, 0x02, 0x94, 0x7e, 0x09, 0x2f, 0x98, 0x56);
		
		/// <summary>
		/// Gets or sets the value of NameTipo domain property.
		/// Description for UPM_IPS.DCMLRACPGProyectoIPS.Atributo.Name Tipo
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.DCMLRACPGProyectoIPS.Atributo/NameTipo.DisplayName", typeof(global::UPM_IPS.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "UPM_IPS.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.DCMLRACPGProyectoIPS.Atributo/NameTipo.Description", typeof(global::UPM_IPS.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "UPM_IPS.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.Browsable(false)]
		[global::System.ComponentModel.ReadOnly(true)]
		[DslModeling::DomainProperty(Kind = DslModeling::DomainPropertyKind.Calculated)]
		[DslModeling::DomainObjectId("36b74ff4-5b2a-458f-ac02-947e092f9856")]
		public global::System.String NameTipo
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return NameTipoPropertyHandler.Instance.GetValue(this);
			}
		}
		/// <summary>
		/// Value handler for the Atributo.NameTipo domain property.
		/// </summary>
		internal sealed partial class NameTipoPropertyHandler : DslModeling::CalculatedPropertyValueHandler<Atributo, global::System.String>
		{
			private NameTipoPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the Atributo.NameTipo domain property value handler.
			/// </summary>
			public static readonly NameTipoPropertyHandler Instance = new NameTipoPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the Atributo.NameTipo domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return NameTipoDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(Atributo element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				// There is no storage for NameTipo because its Kind is
				// set to Calculated. Please provide the GetNameTipoValue()
				// method on the domain class.
				return element.GetNameTipoValue();
			}
		
		}
		
		#endregion
		#region Clase opposite domain role accessor
		/// <summary>
		/// Gets or sets Clase.
		/// Description for UPM_IPS.DCMLRACPGProyectoIPS.ClaseHasAtributo.Atributo
		/// </summary>
		public virtual Clase Clase
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::UPM_IPS.DCMLRACPGProyectoIPS.ClaseHasAtributo.AtributoDomainRoleId) as Clase;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::UPM_IPS.DCMLRACPGProyectoIPS.ClaseHasAtributo.AtributoDomainRoleId, value);
			}
		}
		#endregion
	}
}
namespace UPM_IPS.DCMLRACPGProyectoIPS
{
	/// <summary>
	/// DomainClass Parametro
	/// Description for UPM_IPS.DCMLRACPGProyectoIPS.Parametro
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.DCMLRACPGProyectoIPS.Parametro.DisplayName", typeof(global::UPM_IPS.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "UPM_IPS.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.DCMLRACPGProyectoIPS.Parametro.Description", typeof(global::UPM_IPS.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "UPM_IPS.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[global::System.Diagnostics.DebuggerDisplay("{GetType().Name,nq} (Nombre = {nombrePropertyStorage})")]
	[DslModeling::DomainObjectId("07e74404-a6d4-4da4-9d50-98bb979c0167")]
	public partial class Parametro : DslModeling::ModelElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// Parametro domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x07e74404, 0xa6d4, 0x4da4, 0x9d, 0x50, 0x98, 0xbb, 0x97, 0x9c, 0x01, 0x67);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public Parametro(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public Parametro(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region Nombre domain property code
		
		/// <summary>
		/// Nombre domain property Id.
		/// </summary>
		public static readonly global::System.Guid NombreDomainPropertyId = new global::System.Guid(0x402061a3, 0x9621, 0x45d7, 0xa7, 0x23, 0x8f, 0x74, 0x73, 0x0b, 0xae, 0xb4);
		
		/// <summary>
		/// Storage for Nombre
		/// </summary>
		private global::System.String nombrePropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of Nombre domain property.
		/// Description for UPM_IPS.DCMLRACPGProyectoIPS.Parametro.Nombre
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.DCMLRACPGProyectoIPS.Parametro/Nombre.DisplayName", typeof(global::UPM_IPS.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "UPM_IPS.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.DCMLRACPGProyectoIPS.Parametro/Nombre.Description", typeof(global::UPM_IPS.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "UPM_IPS.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::ElementName]
		[DslModeling::DomainObjectId("402061a3-9621-45d7-a723-8f74730baeb4")]
		public global::System.String Nombre
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return nombrePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				NombrePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the Parametro.Nombre domain property.
		/// </summary>
		internal sealed partial class NombrePropertyHandler : DslModeling::DomainPropertyValueHandler<Parametro, global::System.String>
		{
			private NombrePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the Parametro.Nombre domain property value handler.
			/// </summary>
			public static readonly NombrePropertyHandler Instance = new NombrePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the Parametro.Nombre domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return NombreDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(Parametro element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.nombrePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(Parametro element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.nombrePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region TipoDato domain property code
		
		/// <summary>
		/// TipoDato domain property Id.
		/// </summary>
		public static readonly global::System.Guid TipoDatoDomainPropertyId = new global::System.Guid(0xb9055765, 0x9fc4, 0x4724, 0x8c, 0xe6, 0xae, 0x78, 0xaf, 0xa0, 0xad, 0xcf);
		
		/// <summary>
		/// Storage for TipoDato
		/// </summary>
		private global::System.String tipoDatoPropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of TipoDato domain property.
		/// Description for UPM_IPS.DCMLRACPGProyectoIPS.Parametro.Tipo Dato
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.DCMLRACPGProyectoIPS.Parametro/TipoDato.DisplayName", typeof(global::UPM_IPS.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "UPM_IPS.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.DCMLRACPGProyectoIPS.Parametro/TipoDato.Description", typeof(global::UPM_IPS.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "UPM_IPS.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("b9055765-9fc4-4724-8ce6-ae78afa0adcf")]
		public global::System.String TipoDato
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return tipoDatoPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				TipoDatoPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the Parametro.TipoDato domain property.
		/// </summary>
		internal sealed partial class TipoDatoPropertyHandler : DslModeling::DomainPropertyValueHandler<Parametro, global::System.String>
		{
			private TipoDatoPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the Parametro.TipoDato domain property value handler.
			/// </summary>
			public static readonly TipoDatoPropertyHandler Instance = new TipoDatoPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the Parametro.TipoDato domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return TipoDatoDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(Parametro element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.tipoDatoPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(Parametro element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.tipoDatoPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region TipoParametro domain property code
		
		/// <summary>
		/// TipoParametro domain property Id.
		/// </summary>
		public static readonly global::System.Guid TipoParametroDomainPropertyId = new global::System.Guid(0xc682f36a, 0xa82a, 0x4a84, 0xb4, 0x73, 0x1b, 0xce, 0xc6, 0x5f, 0x40, 0x2d);
		
		/// <summary>
		/// Storage for TipoParametro
		/// </summary>
		private TipoParametro tipoParametroPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of TipoParametro domain property.
		/// Description for UPM_IPS.DCMLRACPGProyectoIPS.Parametro.Tipo Parametro
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.DCMLRACPGProyectoIPS.Parametro/TipoParametro.DisplayName", typeof(global::UPM_IPS.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "UPM_IPS.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.DCMLRACPGProyectoIPS.Parametro/TipoParametro.Description", typeof(global::UPM_IPS.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "UPM_IPS.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("c682f36a-a82a-4a84-b473-1bcec65f402d")]
		public TipoParametro TipoParametro
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return tipoParametroPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				TipoParametroPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the Parametro.TipoParametro domain property.
		/// </summary>
		internal sealed partial class TipoParametroPropertyHandler : DslModeling::DomainPropertyValueHandler<Parametro, TipoParametro>
		{
			private TipoParametroPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the Parametro.TipoParametro domain property value handler.
			/// </summary>
			public static readonly TipoParametroPropertyHandler Instance = new TipoParametroPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the Parametro.TipoParametro domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return TipoParametroDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed TipoParametro GetValue(Parametro element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.tipoParametroPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(Parametro element, TipoParametro newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				TipoParametro oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.tipoParametroPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region Detalles domain property code
		
		/// <summary>
		/// Detalles domain property Id.
		/// </summary>
		public static readonly global::System.Guid DetallesDomainPropertyId = new global::System.Guid(0xa542b637, 0xc6b1, 0x4f83, 0xbc, 0xd7, 0xa9, 0x69, 0x54, 0xc1, 0x6c, 0x64);
		
		/// <summary>
		/// Gets or sets the value of Detalles domain property.
		/// Description for UPM_IPS.DCMLRACPGProyectoIPS.Parametro.Detalles
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.DCMLRACPGProyectoIPS.Parametro/Detalles.DisplayName", typeof(global::UPM_IPS.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "UPM_IPS.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.DCMLRACPGProyectoIPS.Parametro/Detalles.Description", typeof(global::UPM_IPS.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "UPM_IPS.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.Browsable(false)]
		[global::System.ComponentModel.ReadOnly(true)]
		[DslModeling::DomainProperty(Kind = DslModeling::DomainPropertyKind.Calculated)]
		[DslModeling::DomainObjectId("a542b637-c6b1-4f83-bcd7-a96954c16c64")]
		public global::System.String Detalles
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DetallesPropertyHandler.Instance.GetValue(this);
			}
		}
		/// <summary>
		/// Value handler for the Parametro.Detalles domain property.
		/// </summary>
		internal sealed partial class DetallesPropertyHandler : DslModeling::CalculatedPropertyValueHandler<Parametro, global::System.String>
		{
			private DetallesPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the Parametro.Detalles domain property value handler.
			/// </summary>
			public static readonly DetallesPropertyHandler Instance = new DetallesPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the Parametro.Detalles domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return DetallesDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(Parametro element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				// There is no storage for Detalles because its Kind is
				// set to Calculated. Please provide the GetDetallesValue()
				// method on the domain class.
				return element.GetDetallesValue();
			}
		
		}
		
		#endregion
		#region Metodo opposite domain role accessor
		/// <summary>
		/// Gets or sets Metodo.
		/// Description for UPM_IPS.DCMLRACPGProyectoIPS.MetodoHasParametro.Parametro
		/// </summary>
		public virtual Metodo Metodo
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::UPM_IPS.DCMLRACPGProyectoIPS.MetodoHasParametro.ParametroDomainRoleId) as Metodo;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::UPM_IPS.DCMLRACPGProyectoIPS.MetodoHasParametro.ParametroDomainRoleId, value);
			}
		}
		#endregion
	}
}
namespace UPM_IPS.DCMLRACPGProyectoIPS
{
	/// <summary>
	/// DomainClass ClaseAbstracta
	/// Description for UPM_IPS.DCMLRACPGProyectoIPS.ClaseAbstracta
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.DCMLRACPGProyectoIPS.ClaseAbstracta.DisplayName", typeof(global::UPM_IPS.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "UPM_IPS.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.DCMLRACPGProyectoIPS.ClaseAbstracta.Description", typeof(global::UPM_IPS.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "UPM_IPS.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("0bd8146f-64dd-459f-a3bd-d37f5821eba1")]
	public partial class ClaseAbstracta : Clase
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// ClaseAbstracta domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x0bd8146f, 0x64dd, 0x459f, 0xa3, 0xbd, 0xd3, 0x7f, 0x58, 0x21, 0xeb, 0xa1);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public ClaseAbstracta(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public ClaseAbstracta(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region MétodoAbstracto opposite domain role accessor
		
		/// <summary>
		/// Gets a list of MétodoAbstracto.
		/// Description for
		/// UPM_IPS.DCMLRACPGProyectoIPS.ClaseAbstractaTieneMétodoAbstracto.ClaseAbstracta
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<MétodoAbstracto> MétodoAbstracto
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<MétodoAbstracto>, MétodoAbstracto>(global::UPM_IPS.DCMLRACPGProyectoIPS.ClaseAbstractaTieneMétodoAbstracto.ClaseAbstractaDomainRoleId);
			}
		}
		#endregion
	}
}
namespace UPM_IPS.DCMLRACPGProyectoIPS
{
	/// <summary>
	/// DomainClass Metodo
	/// Description for UPM_IPS.DCMLRACPGProyectoIPS.Metodo
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.DCMLRACPGProyectoIPS.Metodo.DisplayName", typeof(global::UPM_IPS.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "UPM_IPS.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.DCMLRACPGProyectoIPS.Metodo.Description", typeof(global::UPM_IPS.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "UPM_IPS.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[global::System.Diagnostics.DebuggerDisplay("{GetType().Name,nq} (Name = {namePropertyStorage})")]
	[DslModeling::DomainObjectId("3886ef8d-77fe-458a-9fcd-c3cb67ff9b50")]
	public partial class Metodo : MetodoEnriquecido
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// Metodo domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x3886ef8d, 0x77fe, 0x458a, 0x9f, 0xcd, 0xc3, 0xcb, 0x67, 0xff, 0x9b, 0x50);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public Metodo(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public Metodo(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region Name domain property code
		
		/// <summary>
		/// Name domain property Id.
		/// </summary>
		public static readonly global::System.Guid NameDomainPropertyId = new global::System.Guid(0xcfc851e2, 0x0597, 0x418b, 0xbd, 0x24, 0xe5, 0x17, 0x3b, 0x7d, 0x75, 0x65);
		
		/// <summary>
		/// Storage for Name
		/// </summary>
		private global::System.String namePropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of Name domain property.
		/// Description for UPM_IPS.DCMLRACPGProyectoIPS.Metodo.Name
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.DCMLRACPGProyectoIPS.Metodo/Name.DisplayName", typeof(global::UPM_IPS.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "UPM_IPS.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.DCMLRACPGProyectoIPS.Metodo/Name.Description", typeof(global::UPM_IPS.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "UPM_IPS.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::ElementName]
		[DslModeling::DomainObjectId("cfc851e2-0597-418b-bd24-e5173b7d7565")]
		public global::System.String Name
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return namePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				NamePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the Metodo.Name domain property.
		/// </summary>
		internal sealed partial class NamePropertyHandler : DslModeling::DomainPropertyValueHandler<Metodo, global::System.String>
		{
			private NamePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the Metodo.Name domain property value handler.
			/// </summary>
			public static readonly NamePropertyHandler Instance = new NamePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the Metodo.Name domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return NameDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(Metodo element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.namePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(Metodo element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.namePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region TipoRetorno domain property code
		
		/// <summary>
		/// TipoRetorno domain property Id.
		/// </summary>
		public static readonly global::System.Guid TipoRetornoDomainPropertyId = new global::System.Guid(0x19bbb9a0, 0x007a, 0x4af6, 0x95, 0x8f, 0xcc, 0xed, 0x93, 0x30, 0x14, 0xfc);
		
		/// <summary>
		/// Storage for TipoRetorno
		/// </summary>
		private global::System.String tipoRetornoPropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of TipoRetorno domain property.
		/// Description for UPM_IPS.DCMLRACPGProyectoIPS.Metodo.Tipo Retorno
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.DCMLRACPGProyectoIPS.Metodo/TipoRetorno.DisplayName", typeof(global::UPM_IPS.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "UPM_IPS.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.DCMLRACPGProyectoIPS.Metodo/TipoRetorno.Description", typeof(global::UPM_IPS.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "UPM_IPS.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("19bbb9a0-007a-4af6-958f-cced933014fc")]
		public global::System.String TipoRetorno
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return tipoRetornoPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				TipoRetornoPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the Metodo.TipoRetorno domain property.
		/// </summary>
		internal sealed partial class TipoRetornoPropertyHandler : DslModeling::DomainPropertyValueHandler<Metodo, global::System.String>
		{
			private TipoRetornoPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the Metodo.TipoRetorno domain property value handler.
			/// </summary>
			public static readonly TipoRetornoPropertyHandler Instance = new TipoRetornoPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the Metodo.TipoRetorno domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return TipoRetornoDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(Metodo element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.tipoRetornoPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(Metodo element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.tipoRetornoPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region NameTipoRetorno domain property code
		
		/// <summary>
		/// NameTipoRetorno domain property Id.
		/// </summary>
		public static readonly global::System.Guid NameTipoRetornoDomainPropertyId = new global::System.Guid(0x5d9b0e74, 0x273e, 0x45bc, 0x80, 0xcf, 0x74, 0xb8, 0xef, 0x36, 0x53, 0x76);
		
		/// <summary>
		/// Gets or sets the value of NameTipoRetorno domain property.
		/// Description for UPM_IPS.DCMLRACPGProyectoIPS.Metodo.Name Tipo Retorno
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.DCMLRACPGProyectoIPS.Metodo/NameTipoRetorno.DisplayName", typeof(global::UPM_IPS.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "UPM_IPS.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.DCMLRACPGProyectoIPS.Metodo/NameTipoRetorno.Description", typeof(global::UPM_IPS.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "UPM_IPS.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.Browsable(false)]
		[global::System.ComponentModel.ReadOnly(true)]
		[DslModeling::DomainProperty(Kind = DslModeling::DomainPropertyKind.Calculated)]
		[DslModeling::DomainObjectId("5d9b0e74-273e-45bc-80cf-74b8ef365376")]
		public global::System.String NameTipoRetorno
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return NameTipoRetornoPropertyHandler.Instance.GetValue(this);
			}
		}
		/// <summary>
		/// Value handler for the Metodo.NameTipoRetorno domain property.
		/// </summary>
		internal sealed partial class NameTipoRetornoPropertyHandler : DslModeling::CalculatedPropertyValueHandler<Metodo, global::System.String>
		{
			private NameTipoRetornoPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the Metodo.NameTipoRetorno domain property value handler.
			/// </summary>
			public static readonly NameTipoRetornoPropertyHandler Instance = new NameTipoRetornoPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the Metodo.NameTipoRetorno domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return NameTipoRetornoDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(Metodo element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				// There is no storage for NameTipoRetorno because its Kind is
				// set to Calculated. Please provide the GetNameTipoRetornoValue()
				// method on the domain class.
				return element.GetNameTipoRetornoValue();
			}
		
		}
		
		#endregion
		#region Parametro opposite domain role accessor
		
		/// <summary>
		/// Gets a list of Parametro.
		/// Description for UPM_IPS.DCMLRACPGProyectoIPS.MetodoHasParametro.Metodo
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<Parametro> Parametro
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<Parametro>, Parametro>(global::UPM_IPS.DCMLRACPGProyectoIPS.MetodoHasParametro.MetodoDomainRoleId);
			}
		}
		#endregion
		#region Clase opposite domain role accessor
		/// <summary>
		/// Gets or sets Clase.
		/// Description for UPM_IPS.DCMLRACPGProyectoIPS.ClaseHasMetodo.Metodo
		/// </summary>
		public virtual Clase Clase
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::UPM_IPS.DCMLRACPGProyectoIPS.ClaseHasMetodo.MetodoDomainRoleId) as Clase;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::UPM_IPS.DCMLRACPGProyectoIPS.ClaseHasMetodo.MetodoDomainRoleId, value);
			}
		}
		#endregion
	}
}
namespace UPM_IPS.DCMLRACPGProyectoIPS
{
	/// <summary>
	/// DomainClass Clase
	/// Description for UPM_IPS.DCMLRACPGProyectoIPS.Clase
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.DCMLRACPGProyectoIPS.Clase.DisplayName", typeof(global::UPM_IPS.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "UPM_IPS.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.DCMLRACPGProyectoIPS.Clase.Description", typeof(global::UPM_IPS.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "UPM_IPS.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[global::System.Diagnostics.DebuggerDisplay("{GetType().Name,nq} (Name = {namePropertyStorage})")]
	[DslModeling::DomainObjectId("45d84e46-585f-4f60-b91f-3f8bd1f815c7")]
	public partial class Clase : ClaseEnriquecida
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// Clase domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x45d84e46, 0x585f, 0x4f60, 0xb9, 0x1f, 0x3f, 0x8b, 0xd1, 0xf8, 0x15, 0xc7);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public Clase(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public Clase(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region Name domain property code
		
		/// <summary>
		/// Name domain property Id.
		/// </summary>
		public static readonly global::System.Guid NameDomainPropertyId = new global::System.Guid(0x72dc9542, 0xf887, 0x4ce2, 0x80, 0xa1, 0x16, 0x1a, 0x3f, 0x5c, 0x7b, 0x97);
		
		/// <summary>
		/// Storage for Name
		/// </summary>
		private global::System.String namePropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of Name domain property.
		/// Description for UPM_IPS.DCMLRACPGProyectoIPS.Clase.Name
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.DCMLRACPGProyectoIPS.Clase/Name.DisplayName", typeof(global::UPM_IPS.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "UPM_IPS.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.DCMLRACPGProyectoIPS.Clase/Name.Description", typeof(global::UPM_IPS.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "UPM_IPS.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::ElementName]
		[DslModeling::DomainObjectId("72dc9542-f887-4ce2-80a1-161a3f5c7b97")]
		public global::System.String Name
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return namePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				NamePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the Clase.Name domain property.
		/// </summary>
		internal sealed partial class NamePropertyHandler : DslModeling::DomainPropertyValueHandler<Clase, global::System.String>
		{
			private NamePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the Clase.Name domain property value handler.
			/// </summary>
			public static readonly NamePropertyHandler Instance = new NamePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the Clase.Name domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return NameDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(Clase element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.namePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(Clase element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.namePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region Identificador domain property code
		
		/// <summary>
		/// Identificador domain property Id.
		/// </summary>
		public static readonly global::System.Guid IdentificadorDomainPropertyId = new global::System.Guid(0xda5f2470, 0x15df, 0x4161, 0xa7, 0xad, 0xdb, 0x2b, 0x5b, 0x62, 0x72, 0x7a);
		
		/// <summary>
		/// Storage for Identificador
		/// </summary>
		private global::System.String identificadorPropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of Identificador domain property.
		/// Description for UPM_IPS.DCMLRACPGProyectoIPS.Clase.Identificador
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.DCMLRACPGProyectoIPS.Clase/Identificador.DisplayName", typeof(global::UPM_IPS.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "UPM_IPS.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.DCMLRACPGProyectoIPS.Clase/Identificador.Description", typeof(global::UPM_IPS.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "UPM_IPS.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("da5f2470-15df-4161-a7ad-db2b5b62727a")]
		public global::System.String Identificador
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return identificadorPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				IdentificadorPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the Clase.Identificador domain property.
		/// </summary>
		internal sealed partial class IdentificadorPropertyHandler : DslModeling::DomainPropertyValueHandler<Clase, global::System.String>
		{
			private IdentificadorPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the Clase.Identificador domain property value handler.
			/// </summary>
			public static readonly IdentificadorPropertyHandler Instance = new IdentificadorPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the Clase.Identificador domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return IdentificadorDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(Clase element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.identificadorPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(Clase element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.identificadorPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region TapizModelo opposite domain role accessor
		/// <summary>
		/// Gets or sets TapizModelo.
		/// Description for UPM_IPS.DCMLRACPGProyectoIPS.TapizModeloHasClase.Clase
		/// </summary>
		public virtual TapizModelo TapizModelo
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::UPM_IPS.DCMLRACPGProyectoIPS.TapizModeloHasClase.ClaseDomainRoleId) as TapizModelo;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::UPM_IPS.DCMLRACPGProyectoIPS.TapizModeloHasClase.ClaseDomainRoleId, value);
			}
		}
		#endregion
		#region Compuesta opposite domain role accessor
		
		/// <summary>
		/// Gets a list of Compuesta.
		/// Description for UPM_IPS.DCMLRACPGProyectoIPS.Agregacion.SourceClase
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<Clase> Compuesta
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<Clase>, Clase>(global::UPM_IPS.DCMLRACPGProyectoIPS.Agregacion.SourceClaseDomainRoleId);
			}
		}
		#endregion
		#region Componente opposite domain role accessor
		
		/// <summary>
		/// Gets a list of Componente.
		/// Description for UPM_IPS.DCMLRACPGProyectoIPS.Agregacion.TargetClase
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<Clase> Componente
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<Clase>, Clase>(global::UPM_IPS.DCMLRACPGProyectoIPS.Agregacion.TargetClaseDomainRoleId);
			}
		}
		#endregion
		#region TargetClase opposite domain role accessor
		
		/// <summary>
		/// Gets a list of TargetClase.
		/// Description for UPM_IPS.DCMLRACPGProyectoIPS.Asociacion.SourceClase
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<Clase> TargetClase
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<Clase>, Clase>(global::UPM_IPS.DCMLRACPGProyectoIPS.Asociacion.SourceClaseDomainRoleId);
			}
		}
		#endregion
		#region SourceClase opposite domain role accessor
		
		/// <summary>
		/// Gets a list of SourceClase.
		/// Description for UPM_IPS.DCMLRACPGProyectoIPS.Asociacion.TargetClase
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<Clase> SourceClase
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<Clase>, Clase>(global::UPM_IPS.DCMLRACPGProyectoIPS.Asociacion.TargetClaseDomainRoleId);
			}
		}
		#endregion
		#region Atributo opposite domain role accessor
		
		/// <summary>
		/// Gets a list of Atributo.
		/// Description for UPM_IPS.DCMLRACPGProyectoIPS.ClaseHasAtributo.Clase
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<Atributo> Atributo
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<Atributo>, Atributo>(global::UPM_IPS.DCMLRACPGProyectoIPS.ClaseHasAtributo.ClaseDomainRoleId);
			}
		}
		#endregion
		#region Metodo opposite domain role accessor
		
		/// <summary>
		/// Gets a list of Metodo.
		/// Description for UPM_IPS.DCMLRACPGProyectoIPS.ClaseHasMetodo.Clase
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<Metodo> Metodo
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<Metodo>, Metodo>(global::UPM_IPS.DCMLRACPGProyectoIPS.ClaseHasMetodo.ClaseDomainRoleId);
			}
		}
		#endregion
		#region SubClase opposite domain role accessor
		
		/// <summary>
		/// Gets a list of SubClase.
		/// Description for UPM_IPS.DCMLRACPGProyectoIPS.Herencia.SourceClase
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<Clase> SubClase
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<Clase>, Clase>(global::UPM_IPS.DCMLRACPGProyectoIPS.Herencia.SourceClaseDomainRoleId);
			}
		}
		#endregion
		#region SuperClase opposite domain role accessor
		/// <summary>
		/// Gets or sets SuperClase.
		/// Description for UPM_IPS.DCMLRACPGProyectoIPS.Herencia.TargetClase
		/// </summary>
		public virtual Clase SuperClase
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::UPM_IPS.DCMLRACPGProyectoIPS.Herencia.TargetClaseDomainRoleId) as Clase;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::UPM_IPS.DCMLRACPGProyectoIPS.Herencia.TargetClaseDomainRoleId, value);
			}
		}
		#endregion
		#region ElementGroupPrototype Merge methods
		/// <summary>
		/// Returns a value indicating whether the source element represented by the
		/// specified root ProtoElement can be added to this element.
		/// </summary>
		/// <param name="rootElement">
		/// The root ProtoElement representing a source element.  This can be null, 
		/// in which case the ElementGroupPrototype does not contain an ProtoElements
		/// and the code should inspect the ElementGroupPrototype context information.
		/// </param>
		/// <param name="elementGroupPrototype">The ElementGroupPrototype that contains the root ProtoElement.</param>
		/// <returns>true if the source element represented by the ProtoElement can be added to this target element.</returns>
		protected override bool CanMerge(DslModeling::ProtoElementBase rootElement, DslModeling::ElementGroupPrototype elementGroupPrototype)
		{
			if ( elementGroupPrototype == null ) throw new global::System.ArgumentNullException("elementGroupPrototype");
			
			if (rootElement != null)
			{
				DslModeling::DomainClassInfo rootElementDomainInfo = this.Partition.DomainDataDirectory.GetDomainClass(rootElement.DomainClassId);
				
				if (rootElementDomainInfo.IsDerivedFrom(global::UPM_IPS.DCMLRACPGProyectoIPS.Atributo.DomainClassId)) 
				{
					return true;
				}
				
				if (rootElementDomainInfo.IsDerivedFrom(global::UPM_IPS.DCMLRACPGProyectoIPS.Metodo.DomainClassId)) 
				{
					return true;
				}
			}
			return base.CanMerge(rootElement, elementGroupPrototype);
		}
		
		/// <summary>
		/// Called by the Merge process to create a relationship between 
		/// this target element and the specified source element. 
		/// Typically, a parent-child relationship is established
		/// between the target element (the parent) and the source element 
		/// (the child), but any relationship can be established.
		/// </summary>
		/// <param name="sourceElement">The element that is to be related to this model element.</param>
		/// <param name="elementGroup">The group of source ModelElements that have been rehydrated into the target store.</param>
		/// <remarks>
		/// This method is overriden to create the relationship between the target element and the specified source element.
		/// The base method does nothing.
		/// </remarks>
		protected override void MergeRelate(DslModeling::ModelElement sourceElement, DslModeling::ElementGroup elementGroup)
		{
			// In general, sourceElement is allowed to be null, meaning that the elementGroup must be parsed for special cases.
			// However this is not supported in generated code.  Use double-deriving on this class and then override MergeRelate completely if you 
			// need to support this case.
			if ( sourceElement == null ) throw new global::System.ArgumentNullException("sourceElement");
		
				
			global::UPM_IPS.DCMLRACPGProyectoIPS.Atributo sourceAtributo1 = sourceElement as global::UPM_IPS.DCMLRACPGProyectoIPS.Atributo;
			if (sourceAtributo1 != null)
			{
				// Create link for path ClaseHasAtributo.Atributo
				this.Atributo.Add(sourceAtributo1);

				return;
			}
				
			global::UPM_IPS.DCMLRACPGProyectoIPS.Metodo sourceMetodo2 = sourceElement as global::UPM_IPS.DCMLRACPGProyectoIPS.Metodo;
			if (sourceMetodo2 != null)
			{
				// Create link for path ClaseHasMetodo.Metodo
				this.Metodo.Add(sourceMetodo2);

				return;
			}
		
			// Sdk workaround to runtime bug #879350 (DSL: can't copy and paste a MEL that has a MEX). Avoid MergeRelate on ModelElementExtension
			// during a "Paste".
			if (sourceElement is DslModeling::ExtensionElement
				&& sourceElement.Store.TransactionManager.CurrentTransaction.TopLevelTransaction.Context.ContextInfo.ContainsKey("{9DAFD42A-DC0E-4d78-8C3F-8266B2CF8B33}"))
			{
				return;
			}
		
			// Fall through to base class if this class hasn't handled the merge.
			base.MergeRelate(sourceElement, elementGroup);
		}
		
		/// <summary>
		/// Performs operation opposite to MergeRelate - i.e. disconnects a given
		/// element from the current one (removes links created by MergeRelate).
		/// </summary>
		/// <param name="sourceElement">Element to be unmerged/disconnected.</param>
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1800:DoNotCastUnnecessarily")]
		protected override void MergeDisconnect(DslModeling::ModelElement sourceElement)
		{
			if (sourceElement == null) throw new global::System.ArgumentNullException("sourceElement");
				
			global::UPM_IPS.DCMLRACPGProyectoIPS.Atributo sourceAtributo1 = sourceElement as global::UPM_IPS.DCMLRACPGProyectoIPS.Atributo;
			if (sourceAtributo1 != null)
			{
				// Delete link for path ClaseHasAtributo.Atributo
				
				foreach (DslModeling::ElementLink link in global::UPM_IPS.DCMLRACPGProyectoIPS.ClaseHasAtributo.GetLinks((global::UPM_IPS.DCMLRACPGProyectoIPS.Clase)this, sourceAtributo1))
				{
					// Delete the link, but without possible delete propagation to the element since it's moving to a new location.
					link.Delete(global::UPM_IPS.DCMLRACPGProyectoIPS.ClaseHasAtributo.ClaseDomainRoleId, global::UPM_IPS.DCMLRACPGProyectoIPS.ClaseHasAtributo.AtributoDomainRoleId);
				}

				return;
			}
				
			global::UPM_IPS.DCMLRACPGProyectoIPS.Metodo sourceMetodo2 = sourceElement as global::UPM_IPS.DCMLRACPGProyectoIPS.Metodo;
			if (sourceMetodo2 != null)
			{
				// Delete link for path ClaseHasMetodo.Metodo
				
				foreach (DslModeling::ElementLink link in global::UPM_IPS.DCMLRACPGProyectoIPS.ClaseHasMetodo.GetLinks((global::UPM_IPS.DCMLRACPGProyectoIPS.Clase)this, sourceMetodo2))
				{
					// Delete the link, but without possible delete propagation to the element since it's moving to a new location.
					link.Delete(global::UPM_IPS.DCMLRACPGProyectoIPS.ClaseHasMetodo.ClaseDomainRoleId, global::UPM_IPS.DCMLRACPGProyectoIPS.ClaseHasMetodo.MetodoDomainRoleId);
				}

				return;
			}
			// Fall through to base class if this class hasn't handled the unmerge.
			base.MergeDisconnect(sourceElement);
		}
		#endregion
	}
}
namespace UPM_IPS.DCMLRACPGProyectoIPS
{
	/// <summary>
	/// DomainClass MétodoAbstracto
	/// Description for UPM_IPS.DCMLRACPGProyectoIPS.MétodoAbstracto
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.DCMLRACPGProyectoIPS.MétodoAbstracto.DisplayName", typeof(global::UPM_IPS.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "UPM_IPS.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.DCMLRACPGProyectoIPS.MétodoAbstracto.Description", typeof(global::UPM_IPS.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "UPM_IPS.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("61bc2709-874d-44c3-840a-460a58c5180e")]
	public partial class MétodoAbstracto : Metodo
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// MétodoAbstracto domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x61bc2709, 0x874d, 0x44c3, 0x84, 0x0a, 0x46, 0x0a, 0x58, 0xc5, 0x18, 0x0e);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public MétodoAbstracto(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public MétodoAbstracto(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region ClaseAbstracta opposite domain role accessor
		
		/// <summary>
		/// Gets a list of ClaseAbstracta.
		/// Description for
		/// UPM_IPS.DCMLRACPGProyectoIPS.ClaseAbstractaTieneMétodoAbstracto.MétodoAbstracto
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<ClaseAbstracta> ClaseAbstracta
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<ClaseAbstracta>, ClaseAbstracta>(global::UPM_IPS.DCMLRACPGProyectoIPS.ClaseAbstractaTieneMétodoAbstracto.MétodoAbstractoDomainRoleId);
			}
		}
		#endregion
	}
}
namespace UPM_IPS.DCMLRACPGProyectoIPS
{
	/// <summary>
	/// DomainClass ClaseEnriquecida
	/// Description for UPM_IPS.DCMLRACPGProyectoIPS.ClaseEnriquecida
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.DCMLRACPGProyectoIPS.ClaseEnriquecida.DisplayName", typeof(global::UPM_IPS.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "UPM_IPS.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.DCMLRACPGProyectoIPS.ClaseEnriquecida.Description", typeof(global::UPM_IPS.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "UPM_IPS.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("416dd86a-f73a-4181-a61c-f9f788fd71c4")]
	public abstract partial class ClaseEnriquecida : DslModeling::ModelElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// ClaseEnriquecida domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x416dd86a, 0xf73a, 0x4181, 0xa6, 0x1c, 0xf9, 0xf7, 0x88, 0xfd, 0x71, 0xc4);
		/// <summary>
		/// Constructor.
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		protected ClaseEnriquecida(DslModeling::Partition partition, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region Enriquecida domain property code
		
		/// <summary>
		/// Enriquecida domain property Id.
		/// </summary>
		public static readonly global::System.Guid EnriquecidaDomainPropertyId = new global::System.Guid(0xd2d40c70, 0xb517, 0x43f8, 0x95, 0x50, 0x58, 0xe9, 0x32, 0x7c, 0xa1, 0x8f);
		
		/// <summary>
		/// Storage for Enriquecida
		/// </summary>
		private global::System.Boolean enriquecidaPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of Enriquecida domain property.
		/// Description for UPM_IPS.DCMLRACPGProyectoIPS.ClaseEnriquecida.Enriquecida
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.DCMLRACPGProyectoIPS.ClaseEnriquecida/Enriquecida.DisplayName", typeof(global::UPM_IPS.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "UPM_IPS.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.DCMLRACPGProyectoIPS.ClaseEnriquecida/Enriquecida.Description", typeof(global::UPM_IPS.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "UPM_IPS.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("d2d40c70-b517-43f8-9550-58e9327ca18f")]
		public global::System.Boolean Enriquecida
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return enriquecidaPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				EnriquecidaPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the ClaseEnriquecida.Enriquecida domain property.
		/// </summary>
		internal sealed partial class EnriquecidaPropertyHandler : DslModeling::DomainPropertyValueHandler<ClaseEnriquecida, global::System.Boolean>
		{
			private EnriquecidaPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the ClaseEnriquecida.Enriquecida domain property value handler.
			/// </summary>
			public static readonly EnriquecidaPropertyHandler Instance = new EnriquecidaPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the ClaseEnriquecida.Enriquecida domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return EnriquecidaDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Boolean GetValue(ClaseEnriquecida element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.enriquecidaPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(ClaseEnriquecida element, global::System.Boolean newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Boolean oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.enriquecidaPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region FondoColorR domain property code
		
		/// <summary>
		/// FondoColorR domain property Id.
		/// </summary>
		public static readonly global::System.Guid FondoColorRDomainPropertyId = new global::System.Guid(0x325999d7, 0xc2af, 0x4b2b, 0xa8, 0xc6, 0xef, 0x5c, 0x2d, 0xb8, 0xce, 0xfd);
		
		/// <summary>
		/// Storage for FondoColorR
		/// </summary>
		private global::System.Int16 fondoColorRPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of FondoColorR domain property.
		/// Description for UPM_IPS.DCMLRACPGProyectoIPS.ClaseEnriquecida.Fondo Color R
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.DCMLRACPGProyectoIPS.ClaseEnriquecida/FondoColorR.DisplayName", typeof(global::UPM_IPS.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "UPM_IPS.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.DCMLRACPGProyectoIPS.ClaseEnriquecida/FondoColorR.Description", typeof(global::UPM_IPS.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "UPM_IPS.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("325999d7-c2af-4b2b-a8c6-ef5c2db8cefd")]
		public global::System.Int16 FondoColorR
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return fondoColorRPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				FondoColorRPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the ClaseEnriquecida.FondoColorR domain property.
		/// </summary>
		internal sealed partial class FondoColorRPropertyHandler : DslModeling::DomainPropertyValueHandler<ClaseEnriquecida, global::System.Int16>
		{
			private FondoColorRPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the ClaseEnriquecida.FondoColorR domain property value handler.
			/// </summary>
			public static readonly FondoColorRPropertyHandler Instance = new FondoColorRPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the ClaseEnriquecida.FondoColorR domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return FondoColorRDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Int16 GetValue(ClaseEnriquecida element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.fondoColorRPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(ClaseEnriquecida element, global::System.Int16 newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Int16 oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.fondoColorRPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region FondoColorG domain property code
		
		/// <summary>
		/// FondoColorG domain property Id.
		/// </summary>
		public static readonly global::System.Guid FondoColorGDomainPropertyId = new global::System.Guid(0x7165850b, 0x1297, 0x407e, 0x85, 0x23, 0x2b, 0xe0, 0xdd, 0xcd, 0x41, 0x06);
		
		/// <summary>
		/// Storage for FondoColorG
		/// </summary>
		private global::System.Int16 fondoColorGPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of FondoColorG domain property.
		/// Description for UPM_IPS.DCMLRACPGProyectoIPS.ClaseEnriquecida.Fondo Color G
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.DCMLRACPGProyectoIPS.ClaseEnriquecida/FondoColorG.DisplayName", typeof(global::UPM_IPS.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "UPM_IPS.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.DCMLRACPGProyectoIPS.ClaseEnriquecida/FondoColorG.Description", typeof(global::UPM_IPS.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "UPM_IPS.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("7165850b-1297-407e-8523-2be0ddcd4106")]
		public global::System.Int16 FondoColorG
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return fondoColorGPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				FondoColorGPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the ClaseEnriquecida.FondoColorG domain property.
		/// </summary>
		internal sealed partial class FondoColorGPropertyHandler : DslModeling::DomainPropertyValueHandler<ClaseEnriquecida, global::System.Int16>
		{
			private FondoColorGPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the ClaseEnriquecida.FondoColorG domain property value handler.
			/// </summary>
			public static readonly FondoColorGPropertyHandler Instance = new FondoColorGPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the ClaseEnriquecida.FondoColorG domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return FondoColorGDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Int16 GetValue(ClaseEnriquecida element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.fondoColorGPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(ClaseEnriquecida element, global::System.Int16 newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Int16 oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.fondoColorGPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region FondoColorB domain property code
		
		/// <summary>
		/// FondoColorB domain property Id.
		/// </summary>
		public static readonly global::System.Guid FondoColorBDomainPropertyId = new global::System.Guid(0x59377741, 0xd5d1, 0x4a8c, 0x83, 0x24, 0x95, 0xa6, 0x20, 0xf0, 0xe9, 0xe4);
		
		/// <summary>
		/// Storage for FondoColorB
		/// </summary>
		private global::System.Int16 fondoColorBPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of FondoColorB domain property.
		/// Description for UPM_IPS.DCMLRACPGProyectoIPS.ClaseEnriquecida.Fondo Color B
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.DCMLRACPGProyectoIPS.ClaseEnriquecida/FondoColorB.DisplayName", typeof(global::UPM_IPS.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "UPM_IPS.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.DCMLRACPGProyectoIPS.ClaseEnriquecida/FondoColorB.Description", typeof(global::UPM_IPS.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "UPM_IPS.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("59377741-d5d1-4a8c-8324-95a620f0e9e4")]
		public global::System.Int16 FondoColorB
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return fondoColorBPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				FondoColorBPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the ClaseEnriquecida.FondoColorB domain property.
		/// </summary>
		internal sealed partial class FondoColorBPropertyHandler : DslModeling::DomainPropertyValueHandler<ClaseEnriquecida, global::System.Int16>
		{
			private FondoColorBPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the ClaseEnriquecida.FondoColorB domain property value handler.
			/// </summary>
			public static readonly FondoColorBPropertyHandler Instance = new FondoColorBPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the ClaseEnriquecida.FondoColorB domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return FondoColorBDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Int16 GetValue(ClaseEnriquecida element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.fondoColorBPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(ClaseEnriquecida element, global::System.Int16 newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Int16 oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.fondoColorBPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region NombreColorR domain property code
		
		/// <summary>
		/// NombreColorR domain property Id.
		/// </summary>
		public static readonly global::System.Guid NombreColorRDomainPropertyId = new global::System.Guid(0xdd5fa666, 0x8737, 0x48fb, 0x95, 0x9a, 0x1c, 0x7f, 0x48, 0x9c, 0x59, 0x40);
		
		/// <summary>
		/// Storage for NombreColorR
		/// </summary>
		private global::System.Int16 nombreColorRPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of NombreColorR domain property.
		/// Description for UPM_IPS.DCMLRACPGProyectoIPS.ClaseEnriquecida.Nombre Color R
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.DCMLRACPGProyectoIPS.ClaseEnriquecida/NombreColorR.DisplayName", typeof(global::UPM_IPS.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "UPM_IPS.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.DCMLRACPGProyectoIPS.ClaseEnriquecida/NombreColorR.Description", typeof(global::UPM_IPS.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "UPM_IPS.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("dd5fa666-8737-48fb-959a-1c7f489c5940")]
		public global::System.Int16 NombreColorR
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return nombreColorRPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				NombreColorRPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the ClaseEnriquecida.NombreColorR domain property.
		/// </summary>
		internal sealed partial class NombreColorRPropertyHandler : DslModeling::DomainPropertyValueHandler<ClaseEnriquecida, global::System.Int16>
		{
			private NombreColorRPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the ClaseEnriquecida.NombreColorR domain property value handler.
			/// </summary>
			public static readonly NombreColorRPropertyHandler Instance = new NombreColorRPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the ClaseEnriquecida.NombreColorR domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return NombreColorRDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Int16 GetValue(ClaseEnriquecida element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.nombreColorRPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(ClaseEnriquecida element, global::System.Int16 newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Int16 oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.nombreColorRPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region NombreColorG domain property code
		
		/// <summary>
		/// NombreColorG domain property Id.
		/// </summary>
		public static readonly global::System.Guid NombreColorGDomainPropertyId = new global::System.Guid(0x28329ea9, 0x2e9a, 0x4ae4, 0xa7, 0x73, 0xe3, 0xa7, 0x76, 0xe8, 0xf1, 0x01);
		
		/// <summary>
		/// Storage for NombreColorG
		/// </summary>
		private global::System.Int16 nombreColorGPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of NombreColorG domain property.
		/// Description for UPM_IPS.DCMLRACPGProyectoIPS.ClaseEnriquecida.Nombre Color G
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.DCMLRACPGProyectoIPS.ClaseEnriquecida/NombreColorG.DisplayName", typeof(global::UPM_IPS.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "UPM_IPS.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.DCMLRACPGProyectoIPS.ClaseEnriquecida/NombreColorG.Description", typeof(global::UPM_IPS.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "UPM_IPS.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("28329ea9-2e9a-4ae4-a773-e3a776e8f101")]
		public global::System.Int16 NombreColorG
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return nombreColorGPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				NombreColorGPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the ClaseEnriquecida.NombreColorG domain property.
		/// </summary>
		internal sealed partial class NombreColorGPropertyHandler : DslModeling::DomainPropertyValueHandler<ClaseEnriquecida, global::System.Int16>
		{
			private NombreColorGPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the ClaseEnriquecida.NombreColorG domain property value handler.
			/// </summary>
			public static readonly NombreColorGPropertyHandler Instance = new NombreColorGPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the ClaseEnriquecida.NombreColorG domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return NombreColorGDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Int16 GetValue(ClaseEnriquecida element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.nombreColorGPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(ClaseEnriquecida element, global::System.Int16 newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Int16 oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.nombreColorGPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region TipoLetra domain property code
		
		/// <summary>
		/// TipoLetra domain property Id.
		/// </summary>
		public static readonly global::System.Guid TipoLetraDomainPropertyId = new global::System.Guid(0x60ce5560, 0xa005, 0x401e, 0x8d, 0x46, 0x8c, 0xaa, 0xf9, 0x04, 0xac, 0xdc);
		
		/// <summary>
		/// Storage for TipoLetra
		/// </summary>
		private TipoLetra tipoLetraPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of TipoLetra domain property.
		/// Description for UPM_IPS.DCMLRACPGProyectoIPS.ClaseEnriquecida.Tipo Letra
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.DCMLRACPGProyectoIPS.ClaseEnriquecida/TipoLetra.DisplayName", typeof(global::UPM_IPS.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "UPM_IPS.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.DCMLRACPGProyectoIPS.ClaseEnriquecida/TipoLetra.Description", typeof(global::UPM_IPS.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "UPM_IPS.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("60ce5560-a005-401e-8d46-8caaf904acdc")]
		public TipoLetra TipoLetra
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return tipoLetraPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				TipoLetraPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the ClaseEnriquecida.TipoLetra domain property.
		/// </summary>
		internal sealed partial class TipoLetraPropertyHandler : DslModeling::DomainPropertyValueHandler<ClaseEnriquecida, TipoLetra>
		{
			private TipoLetraPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the ClaseEnriquecida.TipoLetra domain property value handler.
			/// </summary>
			public static readonly TipoLetraPropertyHandler Instance = new TipoLetraPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the ClaseEnriquecida.TipoLetra domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return TipoLetraDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed TipoLetra GetValue(ClaseEnriquecida element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.tipoLetraPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(ClaseEnriquecida element, TipoLetra newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				TipoLetra oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.tipoLetraPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region Alineacion domain property code
		
		/// <summary>
		/// Alineacion domain property Id.
		/// </summary>
		public static readonly global::System.Guid AlineacionDomainPropertyId = new global::System.Guid(0x906a22d7, 0x4ca8, 0x4344, 0xa5, 0xbd, 0xe5, 0xc3, 0x30, 0xd2, 0x6c, 0xa8);
		
		/// <summary>
		/// Storage for Alineacion
		/// </summary>
		private global::System.String alineacionPropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of Alineacion domain property.
		/// Description for UPM_IPS.DCMLRACPGProyectoIPS.ClaseEnriquecida.Alineacion
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.DCMLRACPGProyectoIPS.ClaseEnriquecida/Alineacion.DisplayName", typeof(global::UPM_IPS.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "UPM_IPS.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.DCMLRACPGProyectoIPS.ClaseEnriquecida/Alineacion.Description", typeof(global::UPM_IPS.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "UPM_IPS.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("906a22d7-4ca8-4344-a5bd-e5c330d26ca8")]
		public global::System.String Alineacion
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return alineacionPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				AlineacionPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the ClaseEnriquecida.Alineacion domain property.
		/// </summary>
		internal sealed partial class AlineacionPropertyHandler : DslModeling::DomainPropertyValueHandler<ClaseEnriquecida, global::System.String>
		{
			private AlineacionPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the ClaseEnriquecida.Alineacion domain property value handler.
			/// </summary>
			public static readonly AlineacionPropertyHandler Instance = new AlineacionPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the ClaseEnriquecida.Alineacion domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return AlineacionDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(ClaseEnriquecida element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.alineacionPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(ClaseEnriquecida element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.alineacionPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region NombreColorB domain property code
		
		/// <summary>
		/// NombreColorB domain property Id.
		/// </summary>
		public static readonly global::System.Guid NombreColorBDomainPropertyId = new global::System.Guid(0x0f360cd1, 0x7f83, 0x4ac6, 0x9d, 0xab, 0xc1, 0x37, 0x29, 0x41, 0xa6, 0xd2);
		
		/// <summary>
		/// Storage for NombreColorB
		/// </summary>
		private global::System.String nombreColorBPropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of NombreColorB domain property.
		/// Description for UPM_IPS.DCMLRACPGProyectoIPS.ClaseEnriquecida.Nombre Color B
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.DCMLRACPGProyectoIPS.ClaseEnriquecida/NombreColorB.DisplayName", typeof(global::UPM_IPS.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "UPM_IPS.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.DCMLRACPGProyectoIPS.ClaseEnriquecida/NombreColorB.Description", typeof(global::UPM_IPS.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "UPM_IPS.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("0f360cd1-7f83-4ac6-9dab-c1372941a6d2")]
		public global::System.String NombreColorB
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return nombreColorBPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				NombreColorBPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the ClaseEnriquecida.NombreColorB domain property.
		/// </summary>
		internal sealed partial class NombreColorBPropertyHandler : DslModeling::DomainPropertyValueHandler<ClaseEnriquecida, global::System.String>
		{
			private NombreColorBPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the ClaseEnriquecida.NombreColorB domain property value handler.
			/// </summary>
			public static readonly NombreColorBPropertyHandler Instance = new NombreColorBPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the ClaseEnriquecida.NombreColorB domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return NombreColorBDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(ClaseEnriquecida element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.nombreColorBPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(ClaseEnriquecida element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.nombreColorBPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
	}
}
namespace UPM_IPS.DCMLRACPGProyectoIPS
{
	/// <summary>
	/// DomainClass MetodoEnriquecido
	/// Description for UPM_IPS.DCMLRACPGProyectoIPS.MetodoEnriquecido
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.DCMLRACPGProyectoIPS.MetodoEnriquecido.DisplayName", typeof(global::UPM_IPS.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "UPM_IPS.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.DCMLRACPGProyectoIPS.MetodoEnriquecido.Description", typeof(global::UPM_IPS.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "UPM_IPS.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("858fa50a-4994-4f75-a82c-c782c0f07390")]
	public abstract partial class MetodoEnriquecido : DslModeling::ModelElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// MetodoEnriquecido domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x858fa50a, 0x4994, 0x4f75, 0xa8, 0x2c, 0xc7, 0x82, 0xc0, 0xf0, 0x73, 0x90);
		/// <summary>
		/// Constructor.
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		protected MetodoEnriquecido(DslModeling::Partition partition, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region TipoLetra domain property code
		
		/// <summary>
		/// TipoLetra domain property Id.
		/// </summary>
		public static readonly global::System.Guid TipoLetraDomainPropertyId = new global::System.Guid(0xeabd690f, 0x1625, 0x48ad, 0x84, 0x45, 0xf4, 0x25, 0x2f, 0x9e, 0x4a, 0xab);
		
		/// <summary>
		/// Storage for TipoLetra
		/// </summary>
		private TipoLetra1 tipoLetraPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of TipoLetra domain property.
		/// Description for UPM_IPS.DCMLRACPGProyectoIPS.MetodoEnriquecido.Tipo Letra
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.DCMLRACPGProyectoIPS.MetodoEnriquecido/TipoLetra.DisplayName", typeof(global::UPM_IPS.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "UPM_IPS.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.DCMLRACPGProyectoIPS.MetodoEnriquecido/TipoLetra.Description", typeof(global::UPM_IPS.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "UPM_IPS.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("eabd690f-1625-48ad-8445-f4252f9e4aab")]
		public TipoLetra1 TipoLetra
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return tipoLetraPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				TipoLetraPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the MetodoEnriquecido.TipoLetra domain property.
		/// </summary>
		internal sealed partial class TipoLetraPropertyHandler : DslModeling::DomainPropertyValueHandler<MetodoEnriquecido, TipoLetra1>
		{
			private TipoLetraPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the MetodoEnriquecido.TipoLetra domain property value handler.
			/// </summary>
			public static readonly TipoLetraPropertyHandler Instance = new TipoLetraPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the MetodoEnriquecido.TipoLetra domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return TipoLetraDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed TipoLetra1 GetValue(MetodoEnriquecido element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.tipoLetraPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(MetodoEnriquecido element, TipoLetra1 newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				TipoLetra1 oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.tipoLetraPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region ColorLetraR domain property code
		
		/// <summary>
		/// ColorLetraR domain property Id.
		/// </summary>
		public static readonly global::System.Guid ColorLetraRDomainPropertyId = new global::System.Guid(0xeac026be, 0x0c60, 0x4c25, 0xa8, 0x07, 0x70, 0x32, 0x46, 0xa6, 0xd5, 0x41);
		
		/// <summary>
		/// Storage for ColorLetraR
		/// </summary>
		private global::System.Int16 colorLetraRPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of ColorLetraR domain property.
		/// Description for UPM_IPS.DCMLRACPGProyectoIPS.MetodoEnriquecido.Color Letra R
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.DCMLRACPGProyectoIPS.MetodoEnriquecido/ColorLetraR.DisplayName", typeof(global::UPM_IPS.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "UPM_IPS.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.DCMLRACPGProyectoIPS.MetodoEnriquecido/ColorLetraR.Description", typeof(global::UPM_IPS.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "UPM_IPS.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("eac026be-0c60-4c25-a807-703246a6d541")]
		public global::System.Int16 ColorLetraR
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return colorLetraRPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				ColorLetraRPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the MetodoEnriquecido.ColorLetraR domain property.
		/// </summary>
		internal sealed partial class ColorLetraRPropertyHandler : DslModeling::DomainPropertyValueHandler<MetodoEnriquecido, global::System.Int16>
		{
			private ColorLetraRPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the MetodoEnriquecido.ColorLetraR domain property value handler.
			/// </summary>
			public static readonly ColorLetraRPropertyHandler Instance = new ColorLetraRPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the MetodoEnriquecido.ColorLetraR domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return ColorLetraRDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Int16 GetValue(MetodoEnriquecido element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.colorLetraRPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(MetodoEnriquecido element, global::System.Int16 newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Int16 oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.colorLetraRPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region ColorLetraG domain property code
		
		/// <summary>
		/// ColorLetraG domain property Id.
		/// </summary>
		public static readonly global::System.Guid ColorLetraGDomainPropertyId = new global::System.Guid(0xc896b839, 0x119d, 0x49e7, 0x8e, 0xd0, 0x96, 0xf6, 0xf2, 0x3a, 0x7a, 0xcb);
		
		/// <summary>
		/// Storage for ColorLetraG
		/// </summary>
		private global::System.Int16 colorLetraGPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of ColorLetraG domain property.
		/// Description for UPM_IPS.DCMLRACPGProyectoIPS.MetodoEnriquecido.Color Letra G
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.DCMLRACPGProyectoIPS.MetodoEnriquecido/ColorLetraG.DisplayName", typeof(global::UPM_IPS.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "UPM_IPS.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.DCMLRACPGProyectoIPS.MetodoEnriquecido/ColorLetraG.Description", typeof(global::UPM_IPS.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "UPM_IPS.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("c896b839-119d-49e7-8ed0-96f6f23a7acb")]
		public global::System.Int16 ColorLetraG
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return colorLetraGPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				ColorLetraGPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the MetodoEnriquecido.ColorLetraG domain property.
		/// </summary>
		internal sealed partial class ColorLetraGPropertyHandler : DslModeling::DomainPropertyValueHandler<MetodoEnriquecido, global::System.Int16>
		{
			private ColorLetraGPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the MetodoEnriquecido.ColorLetraG domain property value handler.
			/// </summary>
			public static readonly ColorLetraGPropertyHandler Instance = new ColorLetraGPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the MetodoEnriquecido.ColorLetraG domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return ColorLetraGDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Int16 GetValue(MetodoEnriquecido element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.colorLetraGPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(MetodoEnriquecido element, global::System.Int16 newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Int16 oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.colorLetraGPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region ColorLetraB domain property code
		
		/// <summary>
		/// ColorLetraB domain property Id.
		/// </summary>
		public static readonly global::System.Guid ColorLetraBDomainPropertyId = new global::System.Guid(0x9822085e, 0x1ebe, 0x4821, 0x92, 0x63, 0xc0, 0x0f, 0x75, 0x60, 0x1d, 0x3f);
		
		/// <summary>
		/// Storage for ColorLetraB
		/// </summary>
		private global::System.Int16 colorLetraBPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of ColorLetraB domain property.
		/// Description for UPM_IPS.DCMLRACPGProyectoIPS.MetodoEnriquecido.Color Letra B
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.DCMLRACPGProyectoIPS.MetodoEnriquecido/ColorLetraB.DisplayName", typeof(global::UPM_IPS.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "UPM_IPS.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.DCMLRACPGProyectoIPS.MetodoEnriquecido/ColorLetraB.Description", typeof(global::UPM_IPS.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "UPM_IPS.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("9822085e-1ebe-4821-9263-c00f75601d3f")]
		public global::System.Int16 ColorLetraB
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return colorLetraBPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				ColorLetraBPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the MetodoEnriquecido.ColorLetraB domain property.
		/// </summary>
		internal sealed partial class ColorLetraBPropertyHandler : DslModeling::DomainPropertyValueHandler<MetodoEnriquecido, global::System.Int16>
		{
			private ColorLetraBPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the MetodoEnriquecido.ColorLetraB domain property value handler.
			/// </summary>
			public static readonly ColorLetraBPropertyHandler Instance = new ColorLetraBPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the MetodoEnriquecido.ColorLetraB domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return ColorLetraBDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Int16 GetValue(MetodoEnriquecido element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.colorLetraBPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(MetodoEnriquecido element, global::System.Int16 newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Int16 oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.colorLetraBPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region Enriquecido domain property code
		
		/// <summary>
		/// Enriquecido domain property Id.
		/// </summary>
		public static readonly global::System.Guid EnriquecidoDomainPropertyId = new global::System.Guid(0x2a4e8ab8, 0xae15, 0x431b, 0x93, 0x6b, 0x1b, 0x60, 0xff, 0xf3, 0x02, 0xfc);
		
		/// <summary>
		/// Storage for Enriquecido
		/// </summary>
		private global::System.Boolean enriquecidoPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of Enriquecido domain property.
		/// Description for UPM_IPS.DCMLRACPGProyectoIPS.MetodoEnriquecido.Enriquecido
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.DCMLRACPGProyectoIPS.MetodoEnriquecido/Enriquecido.DisplayName", typeof(global::UPM_IPS.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "UPM_IPS.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.DCMLRACPGProyectoIPS.MetodoEnriquecido/Enriquecido.Description", typeof(global::UPM_IPS.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "UPM_IPS.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("2a4e8ab8-ae15-431b-936b-1b60fff302fc")]
		public global::System.Boolean Enriquecido
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return enriquecidoPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				EnriquecidoPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the MetodoEnriquecido.Enriquecido domain property.
		/// </summary>
		internal sealed partial class EnriquecidoPropertyHandler : DslModeling::DomainPropertyValueHandler<MetodoEnriquecido, global::System.Boolean>
		{
			private EnriquecidoPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the MetodoEnriquecido.Enriquecido domain property value handler.
			/// </summary>
			public static readonly EnriquecidoPropertyHandler Instance = new EnriquecidoPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the MetodoEnriquecido.Enriquecido domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return EnriquecidoDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Boolean GetValue(MetodoEnriquecido element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.enriquecidoPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(MetodoEnriquecido element, global::System.Boolean newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Boolean oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.enriquecidoPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
	}
}
namespace UPM_IPS.DCMLRACPGProyectoIPS
{
	/// <summary>
	/// DomainClass AtributoEnriquecido
	/// Description for UPM_IPS.DCMLRACPGProyectoIPS.AtributoEnriquecido
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.DCMLRACPGProyectoIPS.AtributoEnriquecido.DisplayName", typeof(global::UPM_IPS.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "UPM_IPS.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.DCMLRACPGProyectoIPS.AtributoEnriquecido.Description", typeof(global::UPM_IPS.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "UPM_IPS.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("c268bf5a-34c9-4b2c-87e2-62cee552a3d3")]
	public abstract partial class AtributoEnriquecido : DslModeling::ModelElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// AtributoEnriquecido domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xc268bf5a, 0x34c9, 0x4b2c, 0x87, 0xe2, 0x62, 0xce, 0xe5, 0x52, 0xa3, 0xd3);
		/// <summary>
		/// Constructor.
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		protected AtributoEnriquecido(DslModeling::Partition partition, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region ColorLetraR domain property code
		
		/// <summary>
		/// ColorLetraR domain property Id.
		/// </summary>
		public static readonly global::System.Guid ColorLetraRDomainPropertyId = new global::System.Guid(0x3765cfd3, 0x2131, 0x477a, 0xb0, 0xb5, 0x12, 0x0b, 0x8c, 0x1c, 0xf7, 0x5a);
		
		/// <summary>
		/// Storage for ColorLetraR
		/// </summary>
		private global::System.Int16 colorLetraRPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of ColorLetraR domain property.
		/// Description for UPM_IPS.DCMLRACPGProyectoIPS.AtributoEnriquecido.Color Letra R
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.DCMLRACPGProyectoIPS.AtributoEnriquecido/ColorLetraR.DisplayName", typeof(global::UPM_IPS.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "UPM_IPS.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.DCMLRACPGProyectoIPS.AtributoEnriquecido/ColorLetraR.Description", typeof(global::UPM_IPS.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "UPM_IPS.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("3765cfd3-2131-477a-b0b5-120b8c1cf75a")]
		public global::System.Int16 ColorLetraR
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return colorLetraRPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				ColorLetraRPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the AtributoEnriquecido.ColorLetraR domain property.
		/// </summary>
		internal sealed partial class ColorLetraRPropertyHandler : DslModeling::DomainPropertyValueHandler<AtributoEnriquecido, global::System.Int16>
		{
			private ColorLetraRPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the AtributoEnriquecido.ColorLetraR domain property value handler.
			/// </summary>
			public static readonly ColorLetraRPropertyHandler Instance = new ColorLetraRPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the AtributoEnriquecido.ColorLetraR domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return ColorLetraRDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Int16 GetValue(AtributoEnriquecido element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.colorLetraRPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(AtributoEnriquecido element, global::System.Int16 newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Int16 oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.colorLetraRPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region ColorLetraG domain property code
		
		/// <summary>
		/// ColorLetraG domain property Id.
		/// </summary>
		public static readonly global::System.Guid ColorLetraGDomainPropertyId = new global::System.Guid(0x3255c7ba, 0xda75, 0x416d, 0xa0, 0xd0, 0xda, 0x51, 0x68, 0xe8, 0xdc, 0x29);
		
		/// <summary>
		/// Storage for ColorLetraG
		/// </summary>
		private global::System.Int16 colorLetraGPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of ColorLetraG domain property.
		/// Description for UPM_IPS.DCMLRACPGProyectoIPS.AtributoEnriquecido.Color Letra G
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.DCMLRACPGProyectoIPS.AtributoEnriquecido/ColorLetraG.DisplayName", typeof(global::UPM_IPS.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "UPM_IPS.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.DCMLRACPGProyectoIPS.AtributoEnriquecido/ColorLetraG.Description", typeof(global::UPM_IPS.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "UPM_IPS.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("3255c7ba-da75-416d-a0d0-da5168e8dc29")]
		public global::System.Int16 ColorLetraG
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return colorLetraGPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				ColorLetraGPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the AtributoEnriquecido.ColorLetraG domain property.
		/// </summary>
		internal sealed partial class ColorLetraGPropertyHandler : DslModeling::DomainPropertyValueHandler<AtributoEnriquecido, global::System.Int16>
		{
			private ColorLetraGPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the AtributoEnriquecido.ColorLetraG domain property value handler.
			/// </summary>
			public static readonly ColorLetraGPropertyHandler Instance = new ColorLetraGPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the AtributoEnriquecido.ColorLetraG domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return ColorLetraGDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Int16 GetValue(AtributoEnriquecido element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.colorLetraGPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(AtributoEnriquecido element, global::System.Int16 newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Int16 oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.colorLetraGPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region ColorLetraB domain property code
		
		/// <summary>
		/// ColorLetraB domain property Id.
		/// </summary>
		public static readonly global::System.Guid ColorLetraBDomainPropertyId = new global::System.Guid(0x2094af12, 0xf949, 0x4bc3, 0xa5, 0x47, 0x8f, 0x05, 0x90, 0xdc, 0x3a, 0x10);
		
		/// <summary>
		/// Storage for ColorLetraB
		/// </summary>
		private global::System.Int16 colorLetraBPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of ColorLetraB domain property.
		/// Description for UPM_IPS.DCMLRACPGProyectoIPS.AtributoEnriquecido.Color Letra B
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.DCMLRACPGProyectoIPS.AtributoEnriquecido/ColorLetraB.DisplayName", typeof(global::UPM_IPS.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "UPM_IPS.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.DCMLRACPGProyectoIPS.AtributoEnriquecido/ColorLetraB.Description", typeof(global::UPM_IPS.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "UPM_IPS.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("2094af12-f949-4bc3-a547-8f0590dc3a10")]
		public global::System.Int16 ColorLetraB
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return colorLetraBPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				ColorLetraBPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the AtributoEnriquecido.ColorLetraB domain property.
		/// </summary>
		internal sealed partial class ColorLetraBPropertyHandler : DslModeling::DomainPropertyValueHandler<AtributoEnriquecido, global::System.Int16>
		{
			private ColorLetraBPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the AtributoEnriquecido.ColorLetraB domain property value handler.
			/// </summary>
			public static readonly ColorLetraBPropertyHandler Instance = new ColorLetraBPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the AtributoEnriquecido.ColorLetraB domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return ColorLetraBDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Int16 GetValue(AtributoEnriquecido element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.colorLetraBPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(AtributoEnriquecido element, global::System.Int16 newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Int16 oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.colorLetraBPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region TipoLetra domain property code
		
		/// <summary>
		/// TipoLetra domain property Id.
		/// </summary>
		public static readonly global::System.Guid TipoLetraDomainPropertyId = new global::System.Guid(0xb3b01c6b, 0xeb2a, 0x4535, 0xa2, 0xe4, 0xbe, 0xcc, 0xdb, 0x83, 0xb7, 0xa6);
		
		/// <summary>
		/// Storage for TipoLetra
		/// </summary>
		private TipoLetra1 tipoLetraPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of TipoLetra domain property.
		/// Description for UPM_IPS.DCMLRACPGProyectoIPS.AtributoEnriquecido.Tipo Letra
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.DCMLRACPGProyectoIPS.AtributoEnriquecido/TipoLetra.DisplayName", typeof(global::UPM_IPS.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "UPM_IPS.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.DCMLRACPGProyectoIPS.AtributoEnriquecido/TipoLetra.Description", typeof(global::UPM_IPS.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "UPM_IPS.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("b3b01c6b-eb2a-4535-a2e4-beccdb83b7a6")]
		public TipoLetra1 TipoLetra
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return tipoLetraPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				TipoLetraPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the AtributoEnriquecido.TipoLetra domain property.
		/// </summary>
		internal sealed partial class TipoLetraPropertyHandler : DslModeling::DomainPropertyValueHandler<AtributoEnriquecido, TipoLetra1>
		{
			private TipoLetraPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the AtributoEnriquecido.TipoLetra domain property value handler.
			/// </summary>
			public static readonly TipoLetraPropertyHandler Instance = new TipoLetraPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the AtributoEnriquecido.TipoLetra domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return TipoLetraDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed TipoLetra1 GetValue(AtributoEnriquecido element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.tipoLetraPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(AtributoEnriquecido element, TipoLetra1 newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				TipoLetra1 oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.tipoLetraPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region FormatoBooleano domain property code
		
		/// <summary>
		/// FormatoBooleano domain property Id.
		/// </summary>
		public static readonly global::System.Guid FormatoBooleanoDomainPropertyId = new global::System.Guid(0x09eb6868, 0x371b, 0x4abc, 0xa0, 0xb0, 0x59, 0xa6, 0xa3, 0x37, 0x20, 0x95);
		
		/// <summary>
		/// Storage for FormatoBooleano
		/// </summary>
		private FormatoBoolean formatoBooleanoPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of FormatoBooleano domain property.
		/// Description for UPM_IPS.DCMLRACPGProyectoIPS.AtributoEnriquecido.Formato
		/// Booleano
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.DCMLRACPGProyectoIPS.AtributoEnriquecido/FormatoBooleano.DisplayName", typeof(global::UPM_IPS.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "UPM_IPS.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.DCMLRACPGProyectoIPS.AtributoEnriquecido/FormatoBooleano.Description", typeof(global::UPM_IPS.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "UPM_IPS.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("09eb6868-371b-4abc-a0b0-59a6a3372095")]
		public FormatoBoolean FormatoBooleano
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return formatoBooleanoPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				FormatoBooleanoPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the AtributoEnriquecido.FormatoBooleano domain property.
		/// </summary>
		internal sealed partial class FormatoBooleanoPropertyHandler : DslModeling::DomainPropertyValueHandler<AtributoEnriquecido, FormatoBoolean>
		{
			private FormatoBooleanoPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the AtributoEnriquecido.FormatoBooleano domain property value handler.
			/// </summary>
			public static readonly FormatoBooleanoPropertyHandler Instance = new FormatoBooleanoPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the AtributoEnriquecido.FormatoBooleano domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return FormatoBooleanoDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed FormatoBoolean GetValue(AtributoEnriquecido element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.formatoBooleanoPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(AtributoEnriquecido element, FormatoBoolean newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				FormatoBoolean oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.formatoBooleanoPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region Enriquecido domain property code
		
		/// <summary>
		/// Enriquecido domain property Id.
		/// </summary>
		public static readonly global::System.Guid EnriquecidoDomainPropertyId = new global::System.Guid(0xa5d52a70, 0x277d, 0x40be, 0xaf, 0x1a, 0xda, 0xe5, 0x86, 0xdf, 0xa7, 0x73);
		
		/// <summary>
		/// Storage for Enriquecido
		/// </summary>
		private global::System.Boolean enriquecidoPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of Enriquecido domain property.
		/// Description for UPM_IPS.DCMLRACPGProyectoIPS.AtributoEnriquecido.Enriquecido
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.DCMLRACPGProyectoIPS.AtributoEnriquecido/Enriquecido.DisplayName", typeof(global::UPM_IPS.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "UPM_IPS.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.DCMLRACPGProyectoIPS.AtributoEnriquecido/Enriquecido.Description", typeof(global::UPM_IPS.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "UPM_IPS.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("a5d52a70-277d-40be-af1a-dae586dfa773")]
		public global::System.Boolean Enriquecido
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return enriquecidoPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				EnriquecidoPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the AtributoEnriquecido.Enriquecido domain property.
		/// </summary>
		internal sealed partial class EnriquecidoPropertyHandler : DslModeling::DomainPropertyValueHandler<AtributoEnriquecido, global::System.Boolean>
		{
			private EnriquecidoPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the AtributoEnriquecido.Enriquecido domain property value handler.
			/// </summary>
			public static readonly EnriquecidoPropertyHandler Instance = new EnriquecidoPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the AtributoEnriquecido.Enriquecido domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return EnriquecidoDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Boolean GetValue(AtributoEnriquecido element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.enriquecidoPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(AtributoEnriquecido element, global::System.Boolean newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Boolean oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.enriquecidoPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
	}
}
