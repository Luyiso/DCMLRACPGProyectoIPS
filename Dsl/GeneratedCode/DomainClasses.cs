//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using DslModeling = global::Microsoft.VisualStudio.Modeling;
using DslDesign = global::Microsoft.VisualStudio.Modeling.Design;
namespace Company.DCMLRACPGProyectoIPS
{
	/// <summary>
	/// DomainClass TapizModelo
	/// The root in which all other elements are embedded. Appears as a diagram.
	/// </summary>
	[DslDesign::DisplayNameResource("Company.DCMLRACPGProyectoIPS.TapizModelo.DisplayName", typeof(global::Company.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "Company.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Company.DCMLRACPGProyectoIPS.TapizModelo.Description", typeof(global::Company.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "Company.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Company.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("3ff1f316-db9f-43ff-a9d7-9f50d6d21e71")]
	public partial class TapizModelo : DslModeling::ModelElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// TapizModelo domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x3ff1f316, 0xdb9f, 0x43ff, 0xa9, 0xd7, 0x9f, 0x50, 0xd6, 0xd2, 0x1e, 0x71);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public TapizModelo(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public TapizModelo(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region Clase opposite domain role accessor
		
		/// <summary>
		/// Gets a list of Clase.
		/// Description for Company.DCMLRACPGProyectoIPS.Tiene.TapizModelo
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<Clase> Clase
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<Clase>, Clase>(global::Company.DCMLRACPGProyectoIPS.Tiene.TapizModeloDomainRoleId);
			}
		}
		#endregion
	}
}
namespace Company.DCMLRACPGProyectoIPS
{
	/// <summary>
	/// DomainClass Clase
	/// Description for Company.DCMLRACPGProyectoIPS.Clase
	/// </summary>
	[DslDesign::DisplayNameResource("Company.DCMLRACPGProyectoIPS.Clase.DisplayName", typeof(global::Company.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "Company.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Company.DCMLRACPGProyectoIPS.Clase.Description", typeof(global::Company.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "Company.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Company.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[global::System.Diagnostics.DebuggerDisplay("{GetType().Name,nq} (Name = {namePropertyStorage})")]
	[DslModeling::DomainObjectId("2a7b6210-3fba-483e-8192-172b1f3b0836")]
	public partial class Clase : ClaseEnriquecida
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// Clase domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x2a7b6210, 0x3fba, 0x483e, 0x81, 0x92, 0x17, 0x2b, 0x1f, 0x3b, 0x08, 0x36);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public Clase(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public Clase(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region Name domain property code
		
		/// <summary>
		/// Name domain property Id.
		/// </summary>
		public static readonly global::System.Guid NameDomainPropertyId = new global::System.Guid(0x2e66dd1d, 0x11b3, 0x4363, 0x9e, 0xcf, 0xc8, 0x0c, 0x94, 0x0f, 0xce, 0xd5);
		
		/// <summary>
		/// Storage for Name
		/// </summary>
		private global::System.String namePropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of Name domain property.
		/// Description for Company.DCMLRACPGProyectoIPS.Clase.Name
		/// </summary>
		[DslDesign::DisplayNameResource("Company.DCMLRACPGProyectoIPS.Clase/Name.DisplayName", typeof(global::Company.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "Company.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Company.DCMLRACPGProyectoIPS.Clase/Name.Description", typeof(global::Company.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "Company.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::ElementName]
		[DslModeling::DomainObjectId("2e66dd1d-11b3-4363-9ecf-c80c940fced5")]
		public global::System.String Name
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return namePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				NamePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the Clase.Name domain property.
		/// </summary>
		internal sealed partial class NamePropertyHandler : DslModeling::DomainPropertyValueHandler<Clase, global::System.String>
		{
			private NamePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the Clase.Name domain property value handler.
			/// </summary>
			public static readonly NamePropertyHandler Instance = new NamePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the Clase.Name domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return NameDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(Clase element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.namePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(Clase element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.namePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region ID domain property code
		
		/// <summary>
		/// ID domain property Id.
		/// </summary>
		public static readonly global::System.Guid IDDomainPropertyId = new global::System.Guid(0x0ebbdf2a, 0xf550, 0x423c, 0x97, 0xe6, 0x28, 0xe4, 0xd2, 0xca, 0x85, 0x12);
		
		/// <summary>
		/// Storage for ID
		/// </summary>
		private global::System.String iDPropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of ID domain property.
		/// Description for Company.DCMLRACPGProyectoIPS.Clase.ID
		/// </summary>
		[DslDesign::DisplayNameResource("Company.DCMLRACPGProyectoIPS.Clase/ID.DisplayName", typeof(global::Company.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "Company.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Company.DCMLRACPGProyectoIPS.Clase/ID.Description", typeof(global::Company.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "Company.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("0ebbdf2a-f550-423c-97e6-28e4d2ca8512")]
		public global::System.String ID
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return iDPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				IDPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the Clase.ID domain property.
		/// </summary>
		internal sealed partial class IDPropertyHandler : DslModeling::DomainPropertyValueHandler<Clase, global::System.String>
		{
			private IDPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the Clase.ID domain property value handler.
			/// </summary>
			public static readonly IDPropertyHandler Instance = new IDPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the Clase.ID domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return IDDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(Clase element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.iDPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(Clase element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.iDPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region TapizModelo opposite domain role accessor
		/// <summary>
		/// Gets or sets TapizModelo.
		/// Description for Company.DCMLRACPGProyectoIPS.Tiene.Clase
		/// </summary>
		public virtual TapizModelo TapizModelo
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::Company.DCMLRACPGProyectoIPS.Tiene.ClaseDomainRoleId) as TapizModelo;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::Company.DCMLRACPGProyectoIPS.Tiene.ClaseDomainRoleId, value);
			}
		}
		#endregion
		#region Atributo opposite domain role accessor
		
		/// <summary>
		/// Gets a list of Atributo.
		/// Description for Company.DCMLRACPGProyectoIPS.ClaseHasAtributo.Clase
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<Atributo> Atributo
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<Atributo>, Atributo>(global::Company.DCMLRACPGProyectoIPS.ClaseHasAtributo.ClaseDomainRoleId);
			}
		}
		#endregion
		#region SignaturadeOperación opposite domain role accessor
		
		/// <summary>
		/// Gets a list of SignaturadeOperación.
		/// Description for Company.DCMLRACPGProyectoIPS.ClaseHasSignaturadeOperación.Clase
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<SignaturadeOperación> SignaturadeOperación
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<SignaturadeOperación>, SignaturadeOperación>(global::Company.DCMLRACPGProyectoIPS.ClaseHasSignaturadeOperación.ClaseDomainRoleId);
			}
		}
		#endregion
		#region TargetClase opposite domain role accessor
		
		/// <summary>
		/// Gets a list of TargetClase.
		/// Description for Company.DCMLRACPGProyectoIPS.Asociación.SourceClase
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<Clase> TargetClase
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<Clase>, Clase>(global::Company.DCMLRACPGProyectoIPS.Asociación.SourceClaseDomainRoleId);
			}
		}
		#endregion
		#region SourceClase opposite domain role accessor
		
		/// <summary>
		/// Gets a list of SourceClase.
		/// Description for Company.DCMLRACPGProyectoIPS.Asociación.TargetClase
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<Clase> SourceClase
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<Clase>, Clase>(global::Company.DCMLRACPGProyectoIPS.Asociación.TargetClaseDomainRoleId);
			}
		}
		#endregion
		#region Conpuesta opposite domain role accessor
		
		/// <summary>
		/// Gets a list of Conpuesta.
		/// Description for Company.DCMLRACPGProyectoIPS.Agregación.SourceClase
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<Clase> Conpuesta
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<Clase>, Clase>(global::Company.DCMLRACPGProyectoIPS.Agregación.SourceClaseDomainRoleId);
			}
		}
		#endregion
		#region Componente opposite domain role accessor
		
		/// <summary>
		/// Gets a list of Componente.
		/// Description for Company.DCMLRACPGProyectoIPS.Agregación.TargetClase
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<Clase> Componente
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<Clase>, Clase>(global::Company.DCMLRACPGProyectoIPS.Agregación.TargetClaseDomainRoleId);
			}
		}
		#endregion
		#region ElementGroupPrototype Merge methods
		/// <summary>
		/// Returns a value indicating whether the source element represented by the
		/// specified root ProtoElement can be added to this element.
		/// </summary>
		/// <param name="rootElement">
		/// The root ProtoElement representing a source element.  This can be null, 
		/// in which case the ElementGroupPrototype does not contain an ProtoElements
		/// and the code should inspect the ElementGroupPrototype context information.
		/// </param>
		/// <param name="elementGroupPrototype">The ElementGroupPrototype that contains the root ProtoElement.</param>
		/// <returns>true if the source element represented by the ProtoElement can be added to this target element.</returns>
		protected override bool CanMerge(DslModeling::ProtoElementBase rootElement, DslModeling::ElementGroupPrototype elementGroupPrototype)
		{
			if ( elementGroupPrototype == null ) throw new global::System.ArgumentNullException("elementGroupPrototype");
			
			if (rootElement != null)
			{
				DslModeling::DomainClassInfo rootElementDomainInfo = this.Partition.DomainDataDirectory.GetDomainClass(rootElement.DomainClassId);
				
				if (rootElementDomainInfo.IsDerivedFrom(global::Company.DCMLRACPGProyectoIPS.Atributo.DomainClassId)) 
				{
					return true;
				}
				
				if (rootElementDomainInfo.IsDerivedFrom(global::Company.DCMLRACPGProyectoIPS.SignaturadeOperación.DomainClassId)) 
				{
					return true;
				}
			}
			return base.CanMerge(rootElement, elementGroupPrototype);
		}
		
		/// <summary>
		/// Called by the Merge process to create a relationship between 
		/// this target element and the specified source element. 
		/// Typically, a parent-child relationship is established
		/// between the target element (the parent) and the source element 
		/// (the child), but any relationship can be established.
		/// </summary>
		/// <param name="sourceElement">The element that is to be related to this model element.</param>
		/// <param name="elementGroup">The group of source ModelElements that have been rehydrated into the target store.</param>
		/// <remarks>
		/// This method is overriden to create the relationship between the target element and the specified source element.
		/// The base method does nothing.
		/// </remarks>
		protected override void MergeRelate(DslModeling::ModelElement sourceElement, DslModeling::ElementGroup elementGroup)
		{
			// In general, sourceElement is allowed to be null, meaning that the elementGroup must be parsed for special cases.
			// However this is not supported in generated code.  Use double-deriving on this class and then override MergeRelate completely if you 
			// need to support this case.
			if ( sourceElement == null ) throw new global::System.ArgumentNullException("sourceElement");
		
				
			global::Company.DCMLRACPGProyectoIPS.Atributo sourceAtributo1 = sourceElement as global::Company.DCMLRACPGProyectoIPS.Atributo;
			if (sourceAtributo1 != null)
			{
				// Create link for path ClaseHasAtributo.Atributo
				this.Atributo.Add(sourceAtributo1);

				return;
			}
				
			global::Company.DCMLRACPGProyectoIPS.SignaturadeOperación sourceSignaturadeOperación2 = sourceElement as global::Company.DCMLRACPGProyectoIPS.SignaturadeOperación;
			if (sourceSignaturadeOperación2 != null)
			{
				// Create link for path ClaseHasSignaturadeOperación.SignaturadeOperación
				this.SignaturadeOperación.Add(sourceSignaturadeOperación2);

				return;
			}
		
			// Sdk workaround to runtime bug #879350 (DSL: can't copy and paste a MEL that has a MEX). Avoid MergeRelate on ModelElementExtension
			// during a "Paste".
			if (sourceElement is DslModeling::ExtensionElement
				&& sourceElement.Store.TransactionManager.CurrentTransaction.TopLevelTransaction.Context.ContextInfo.ContainsKey("{9DAFD42A-DC0E-4d78-8C3F-8266B2CF8B33}"))
			{
				return;
			}
		
			// Fall through to base class if this class hasn't handled the merge.
			base.MergeRelate(sourceElement, elementGroup);
		}
		
		/// <summary>
		/// Performs operation opposite to MergeRelate - i.e. disconnects a given
		/// element from the current one (removes links created by MergeRelate).
		/// </summary>
		/// <param name="sourceElement">Element to be unmerged/disconnected.</param>
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1800:DoNotCastUnnecessarily")]
		protected override void MergeDisconnect(DslModeling::ModelElement sourceElement)
		{
			if (sourceElement == null) throw new global::System.ArgumentNullException("sourceElement");
				
			global::Company.DCMLRACPGProyectoIPS.Atributo sourceAtributo1 = sourceElement as global::Company.DCMLRACPGProyectoIPS.Atributo;
			if (sourceAtributo1 != null)
			{
				// Delete link for path ClaseHasAtributo.Atributo
				
				foreach (DslModeling::ElementLink link in global::Company.DCMLRACPGProyectoIPS.ClaseHasAtributo.GetLinks((global::Company.DCMLRACPGProyectoIPS.Clase)this, sourceAtributo1))
				{
					// Delete the link, but without possible delete propagation to the element since it's moving to a new location.
					link.Delete(global::Company.DCMLRACPGProyectoIPS.ClaseHasAtributo.ClaseDomainRoleId, global::Company.DCMLRACPGProyectoIPS.ClaseHasAtributo.AtributoDomainRoleId);
				}

				return;
			}
				
			global::Company.DCMLRACPGProyectoIPS.SignaturadeOperación sourceSignaturadeOperación2 = sourceElement as global::Company.DCMLRACPGProyectoIPS.SignaturadeOperación;
			if (sourceSignaturadeOperación2 != null)
			{
				// Delete link for path ClaseHasSignaturadeOperación.SignaturadeOperación
				
				foreach (DslModeling::ElementLink link in global::Company.DCMLRACPGProyectoIPS.ClaseHasSignaturadeOperación.GetLinks((global::Company.DCMLRACPGProyectoIPS.Clase)this, sourceSignaturadeOperación2))
				{
					// Delete the link, but without possible delete propagation to the element since it's moving to a new location.
					link.Delete(global::Company.DCMLRACPGProyectoIPS.ClaseHasSignaturadeOperación.ClaseDomainRoleId, global::Company.DCMLRACPGProyectoIPS.ClaseHasSignaturadeOperación.SignaturadeOperaciónDomainRoleId);
				}

				return;
			}
			// Fall through to base class if this class hasn't handled the unmerge.
			base.MergeDisconnect(sourceElement);
		}
		#endregion
	}
}
namespace Company.DCMLRACPGProyectoIPS
{
	/// <summary>
	/// DomainClass Atributo
	/// Description for Company.DCMLRACPGProyectoIPS.Atributo
	/// </summary>
	[DslDesign::DisplayNameResource("Company.DCMLRACPGProyectoIPS.Atributo.DisplayName", typeof(global::Company.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "Company.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Company.DCMLRACPGProyectoIPS.Atributo.Description", typeof(global::Company.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "Company.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Company.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[global::System.Diagnostics.DebuggerDisplay("{GetType().Name,nq} (Name = {namePropertyStorage})")]
	[DslModeling::DomainObjectId("df43c9fa-4032-4fe5-a6b1-a45c0466ea55")]
	public partial class Atributo : AtributoEnriquecido
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// Atributo domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xdf43c9fa, 0x4032, 0x4fe5, 0xa6, 0xb1, 0xa4, 0x5c, 0x04, 0x66, 0xea, 0x55);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public Atributo(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public Atributo(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region Name domain property code
		
		/// <summary>
		/// Name domain property Id.
		/// </summary>
		public static readonly global::System.Guid NameDomainPropertyId = new global::System.Guid(0xae9969a4, 0x1da5, 0x40d0, 0xbb, 0xbb, 0xc9, 0xe9, 0xf3, 0x73, 0x13, 0xa3);
		
		/// <summary>
		/// Storage for Name
		/// </summary>
		private global::System.String namePropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of Name domain property.
		/// Description for Company.DCMLRACPGProyectoIPS.Atributo.Name
		/// </summary>
		[DslDesign::DisplayNameResource("Company.DCMLRACPGProyectoIPS.Atributo/Name.DisplayName", typeof(global::Company.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "Company.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Company.DCMLRACPGProyectoIPS.Atributo/Name.Description", typeof(global::Company.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "Company.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::ElementName]
		[DslModeling::DomainObjectId("ae9969a4-1da5-40d0-bbbb-c9e9f37313a3")]
		public global::System.String Name
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return namePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				NamePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the Atributo.Name domain property.
		/// </summary>
		internal sealed partial class NamePropertyHandler : DslModeling::DomainPropertyValueHandler<Atributo, global::System.String>
		{
			private NamePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the Atributo.Name domain property value handler.
			/// </summary>
			public static readonly NamePropertyHandler Instance = new NamePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the Atributo.Name domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return NameDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(Atributo element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.namePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(Atributo element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.namePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region TipoDatos domain property code
		
		/// <summary>
		/// TipoDatos domain property Id.
		/// </summary>
		public static readonly global::System.Guid TipoDatosDomainPropertyId = new global::System.Guid(0x4f37dddd, 0xffd4, 0x44b0, 0xbc, 0x71, 0x3c, 0x4c, 0xcb, 0x64, 0x68, 0xb5);
		
		/// <summary>
		/// Storage for TipoDatos
		/// </summary>
		private global::System.String tipoDatosPropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of TipoDatos domain property.
		/// Description for Company.DCMLRACPGProyectoIPS.Atributo.Tipo Datos
		/// </summary>
		[DslDesign::DisplayNameResource("Company.DCMLRACPGProyectoIPS.Atributo/TipoDatos.DisplayName", typeof(global::Company.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "Company.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Company.DCMLRACPGProyectoIPS.Atributo/TipoDatos.Description", typeof(global::Company.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "Company.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("4f37dddd-ffd4-44b0-bc71-3c4ccb6468b5")]
		public global::System.String TipoDatos
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return tipoDatosPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				TipoDatosPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the Atributo.TipoDatos domain property.
		/// </summary>
		internal sealed partial class TipoDatosPropertyHandler : DslModeling::DomainPropertyValueHandler<Atributo, global::System.String>
		{
			private TipoDatosPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the Atributo.TipoDatos domain property value handler.
			/// </summary>
			public static readonly TipoDatosPropertyHandler Instance = new TipoDatosPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the Atributo.TipoDatos domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return TipoDatosDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(Atributo element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.tipoDatosPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(Atributo element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.tipoDatosPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region Clase opposite domain role accessor
		/// <summary>
		/// Gets or sets Clase.
		/// Description for Company.DCMLRACPGProyectoIPS.ClaseHasAtributo.Atributo
		/// </summary>
		public virtual Clase Clase
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::Company.DCMLRACPGProyectoIPS.ClaseHasAtributo.AtributoDomainRoleId) as Clase;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::Company.DCMLRACPGProyectoIPS.ClaseHasAtributo.AtributoDomainRoleId, value);
			}
		}
		#endregion
	}
}
namespace Company.DCMLRACPGProyectoIPS
{
	/// <summary>
	/// DomainClass SignaturadeOperación
	/// Description for Company.DCMLRACPGProyectoIPS.SignaturadeOperación
	/// </summary>
	[DslDesign::DisplayNameResource("Company.DCMLRACPGProyectoIPS.SignaturadeOperación.DisplayName", typeof(global::Company.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "Company.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Company.DCMLRACPGProyectoIPS.SignaturadeOperación.Description", typeof(global::Company.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "Company.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Company.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[global::System.Diagnostics.DebuggerDisplay("{GetType().Name,nq} (Name = {namePropertyStorage})")]
	[DslModeling::DomainObjectId("44a6fa22-8f00-45a0-b70f-aca4d13da263")]
	public partial class SignaturadeOperación : MetodoEnriquecido
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// SignaturadeOperación domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x44a6fa22, 0x8f00, 0x45a0, 0xb7, 0x0f, 0xac, 0xa4, 0xd1, 0x3d, 0xa2, 0x63);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public SignaturadeOperación(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public SignaturadeOperación(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region Name domain property code
		
		/// <summary>
		/// Name domain property Id.
		/// </summary>
		public static readonly global::System.Guid NameDomainPropertyId = new global::System.Guid(0x5bdd00b8, 0x7bf6, 0x47c6, 0x83, 0xb2, 0xd4, 0x43, 0x51, 0xe4, 0xaf, 0x9e);
		
		/// <summary>
		/// Storage for Name
		/// </summary>
		private global::System.String namePropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of Name domain property.
		/// Description for Company.DCMLRACPGProyectoIPS.SignaturadeOperación.Name
		/// </summary>
		[DslDesign::DisplayNameResource("Company.DCMLRACPGProyectoIPS.SignaturadeOperación/Name.DisplayName", typeof(global::Company.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "Company.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Company.DCMLRACPGProyectoIPS.SignaturadeOperación/Name.Description", typeof(global::Company.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "Company.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::ElementName]
		[DslModeling::DomainObjectId("5bdd00b8-7bf6-47c6-83b2-d44351e4af9e")]
		public global::System.String Name
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return namePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				NamePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the SignaturadeOperación.Name domain property.
		/// </summary>
		internal sealed partial class NamePropertyHandler : DslModeling::DomainPropertyValueHandler<SignaturadeOperación, global::System.String>
		{
			private NamePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the SignaturadeOperación.Name domain property value handler.
			/// </summary>
			public static readonly NamePropertyHandler Instance = new NamePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the SignaturadeOperación.Name domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return NameDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(SignaturadeOperación element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.namePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(SignaturadeOperación element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.namePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region TipoRetorno domain property code
		
		/// <summary>
		/// TipoRetorno domain property Id.
		/// </summary>
		public static readonly global::System.Guid TipoRetornoDomainPropertyId = new global::System.Guid(0x1ec1eaa4, 0xe6d5, 0x4326, 0xaf, 0x31, 0x5b, 0xa2, 0x32, 0x3a, 0xb1, 0x43);
		
		/// <summary>
		/// Storage for TipoRetorno
		/// </summary>
		private global::System.String tipoRetornoPropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of TipoRetorno domain property.
		/// Description for Company.DCMLRACPGProyectoIPS.SignaturadeOperación.Tipo Retorno
		/// </summary>
		[DslDesign::DisplayNameResource("Company.DCMLRACPGProyectoIPS.SignaturadeOperación/TipoRetorno.DisplayName", typeof(global::Company.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "Company.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Company.DCMLRACPGProyectoIPS.SignaturadeOperación/TipoRetorno.Description", typeof(global::Company.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "Company.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("1ec1eaa4-e6d5-4326-af31-5ba2323ab143")]
		public global::System.String TipoRetorno
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return tipoRetornoPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				TipoRetornoPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the SignaturadeOperación.TipoRetorno domain property.
		/// </summary>
		internal sealed partial class TipoRetornoPropertyHandler : DslModeling::DomainPropertyValueHandler<SignaturadeOperación, global::System.String>
		{
			private TipoRetornoPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the SignaturadeOperación.TipoRetorno domain property value handler.
			/// </summary>
			public static readonly TipoRetornoPropertyHandler Instance = new TipoRetornoPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the SignaturadeOperación.TipoRetorno domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return TipoRetornoDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(SignaturadeOperación element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.tipoRetornoPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(SignaturadeOperación element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.tipoRetornoPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region Clase opposite domain role accessor
		/// <summary>
		/// Gets or sets Clase.
		/// Description for
		/// Company.DCMLRACPGProyectoIPS.ClaseHasSignaturadeOperación.SignaturadeOperación
		/// </summary>
		public virtual Clase Clase
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::Company.DCMLRACPGProyectoIPS.ClaseHasSignaturadeOperación.SignaturadeOperaciónDomainRoleId) as Clase;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::Company.DCMLRACPGProyectoIPS.ClaseHasSignaturadeOperación.SignaturadeOperaciónDomainRoleId, value);
			}
		}
		#endregion
		#region Parámetros opposite domain role accessor
		
		/// <summary>
		/// Gets a list of Parámetros.
		/// Description for
		/// Company.DCMLRACPGProyectoIPS.SignaturadeOperaciónHasParámetros.SignaturadeOperación
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<Parámetros> Parámetros
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<Parámetros>, Parámetros>(global::Company.DCMLRACPGProyectoIPS.SignaturadeOperaciónHasParámetros.SignaturadeOperaciónDomainRoleId);
			}
		}
		#endregion
		#region ElementGroupPrototype Merge methods
		/// <summary>
		/// Returns a value indicating whether the source element represented by the
		/// specified root ProtoElement can be added to this element.
		/// </summary>
		/// <param name="rootElement">
		/// The root ProtoElement representing a source element.  This can be null, 
		/// in which case the ElementGroupPrototype does not contain an ProtoElements
		/// and the code should inspect the ElementGroupPrototype context information.
		/// </param>
		/// <param name="elementGroupPrototype">The ElementGroupPrototype that contains the root ProtoElement.</param>
		/// <returns>true if the source element represented by the ProtoElement can be added to this target element.</returns>
		protected override bool CanMerge(DslModeling::ProtoElementBase rootElement, DslModeling::ElementGroupPrototype elementGroupPrototype)
		{
			if ( elementGroupPrototype == null ) throw new global::System.ArgumentNullException("elementGroupPrototype");
			
			if (rootElement != null)
			{
				DslModeling::DomainClassInfo rootElementDomainInfo = this.Partition.DomainDataDirectory.GetDomainClass(rootElement.DomainClassId);
				
				if (rootElementDomainInfo.IsDerivedFrom(global::Company.DCMLRACPGProyectoIPS.Parámetros.DomainClassId)) 
				{
					return true;
				}
			}
			return base.CanMerge(rootElement, elementGroupPrototype);
		}
		
		/// <summary>
		/// Called by the Merge process to create a relationship between 
		/// this target element and the specified source element. 
		/// Typically, a parent-child relationship is established
		/// between the target element (the parent) and the source element 
		/// (the child), but any relationship can be established.
		/// </summary>
		/// <param name="sourceElement">The element that is to be related to this model element.</param>
		/// <param name="elementGroup">The group of source ModelElements that have been rehydrated into the target store.</param>
		/// <remarks>
		/// This method is overriden to create the relationship between the target element and the specified source element.
		/// The base method does nothing.
		/// </remarks>
		protected override void MergeRelate(DslModeling::ModelElement sourceElement, DslModeling::ElementGroup elementGroup)
		{
			// In general, sourceElement is allowed to be null, meaning that the elementGroup must be parsed for special cases.
			// However this is not supported in generated code.  Use double-deriving on this class and then override MergeRelate completely if you 
			// need to support this case.
			if ( sourceElement == null ) throw new global::System.ArgumentNullException("sourceElement");
		
				
			global::Company.DCMLRACPGProyectoIPS.Parámetros sourceParámetros1 = sourceElement as global::Company.DCMLRACPGProyectoIPS.Parámetros;
			if (sourceParámetros1 != null)
			{
				// Create link for path SignaturadeOperaciónHasParámetros.Parámetros
				this.Parámetros.Add(sourceParámetros1);

				return;
			}
		
			// Sdk workaround to runtime bug #879350 (DSL: can't copy and paste a MEL that has a MEX). Avoid MergeRelate on ModelElementExtension
			// during a "Paste".
			if (sourceElement is DslModeling::ExtensionElement
				&& sourceElement.Store.TransactionManager.CurrentTransaction.TopLevelTransaction.Context.ContextInfo.ContainsKey("{9DAFD42A-DC0E-4d78-8C3F-8266B2CF8B33}"))
			{
				return;
			}
		
			// Fall through to base class if this class hasn't handled the merge.
			base.MergeRelate(sourceElement, elementGroup);
		}
		
		/// <summary>
		/// Performs operation opposite to MergeRelate - i.e. disconnects a given
		/// element from the current one (removes links created by MergeRelate).
		/// </summary>
		/// <param name="sourceElement">Element to be unmerged/disconnected.</param>
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1800:DoNotCastUnnecessarily")]
		protected override void MergeDisconnect(DslModeling::ModelElement sourceElement)
		{
			if (sourceElement == null) throw new global::System.ArgumentNullException("sourceElement");
				
			global::Company.DCMLRACPGProyectoIPS.Parámetros sourceParámetros1 = sourceElement as global::Company.DCMLRACPGProyectoIPS.Parámetros;
			if (sourceParámetros1 != null)
			{
				// Delete link for path SignaturadeOperaciónHasParámetros.Parámetros
				
				foreach (DslModeling::ElementLink link in global::Company.DCMLRACPGProyectoIPS.SignaturadeOperaciónHasParámetros.GetLinks((global::Company.DCMLRACPGProyectoIPS.SignaturadeOperación)this, sourceParámetros1))
				{
					// Delete the link, but without possible delete propagation to the element since it's moving to a new location.
					link.Delete(global::Company.DCMLRACPGProyectoIPS.SignaturadeOperaciónHasParámetros.SignaturadeOperaciónDomainRoleId, global::Company.DCMLRACPGProyectoIPS.SignaturadeOperaciónHasParámetros.ParámetrosDomainRoleId);
				}

				return;
			}
			// Fall through to base class if this class hasn't handled the unmerge.
			base.MergeDisconnect(sourceElement);
		}
		#endregion
	}
}
namespace Company.DCMLRACPGProyectoIPS
{
	/// <summary>
	/// DomainClass Parámetros
	/// Description for Company.DCMLRACPGProyectoIPS.Parámetros
	/// </summary>
	[DslDesign::DisplayNameResource("Company.DCMLRACPGProyectoIPS.Parámetros.DisplayName", typeof(global::Company.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "Company.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Company.DCMLRACPGProyectoIPS.Parámetros.Description", typeof(global::Company.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "Company.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Company.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[global::System.Diagnostics.DebuggerDisplay("{GetType().Name,nq} (Nombre = {nombrePropertyStorage})")]
	[DslModeling::DomainObjectId("061730c2-c323-4c0e-acf8-5b153b6e2d7e")]
	public partial class Parámetros : DslModeling::ModelElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// Parámetros domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x061730c2, 0xc323, 0x4c0e, 0xac, 0xf8, 0x5b, 0x15, 0x3b, 0x6e, 0x2d, 0x7e);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public Parámetros(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public Parámetros(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region Nombre domain property code
		
		/// <summary>
		/// Nombre domain property Id.
		/// </summary>
		public static readonly global::System.Guid NombreDomainPropertyId = new global::System.Guid(0x2380cb29, 0xc6d8, 0x4794, 0xb3, 0x28, 0x78, 0xc1, 0x19, 0xfe, 0xe9, 0x3a);
		
		/// <summary>
		/// Storage for Nombre
		/// </summary>
		private global::System.String nombrePropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of Nombre domain property.
		/// Description for Company.DCMLRACPGProyectoIPS.Parámetros.Nombre
		/// </summary>
		[DslDesign::DisplayNameResource("Company.DCMLRACPGProyectoIPS.Parámetros/Nombre.DisplayName", typeof(global::Company.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "Company.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Company.DCMLRACPGProyectoIPS.Parámetros/Nombre.Description", typeof(global::Company.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "Company.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::ElementName]
		[DslModeling::DomainObjectId("2380cb29-c6d8-4794-b328-78c119fee93a")]
		public global::System.String Nombre
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return nombrePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				NombrePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the Parámetros.Nombre domain property.
		/// </summary>
		internal sealed partial class NombrePropertyHandler : DslModeling::DomainPropertyValueHandler<Parámetros, global::System.String>
		{
			private NombrePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the Parámetros.Nombre domain property value handler.
			/// </summary>
			public static readonly NombrePropertyHandler Instance = new NombrePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the Parámetros.Nombre domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return NombreDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(Parámetros element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.nombrePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(Parámetros element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.nombrePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region TipoDato domain property code
		
		/// <summary>
		/// TipoDato domain property Id.
		/// </summary>
		public static readonly global::System.Guid TipoDatoDomainPropertyId = new global::System.Guid(0xb6970046, 0x1b12, 0x443d, 0xa3, 0x58, 0x96, 0x99, 0x5f, 0x3d, 0x85, 0x23);
		
		/// <summary>
		/// Storage for TipoDato
		/// </summary>
		private global::System.String tipoDatoPropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of TipoDato domain property.
		/// Description for Company.DCMLRACPGProyectoIPS.Parámetros.Tipo Dato
		/// </summary>
		[DslDesign::DisplayNameResource("Company.DCMLRACPGProyectoIPS.Parámetros/TipoDato.DisplayName", typeof(global::Company.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "Company.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Company.DCMLRACPGProyectoIPS.Parámetros/TipoDato.Description", typeof(global::Company.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "Company.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("b6970046-1b12-443d-a358-96995f3d8523")]
		public global::System.String TipoDato
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return tipoDatoPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				TipoDatoPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the Parámetros.TipoDato domain property.
		/// </summary>
		internal sealed partial class TipoDatoPropertyHandler : DslModeling::DomainPropertyValueHandler<Parámetros, global::System.String>
		{
			private TipoDatoPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the Parámetros.TipoDato domain property value handler.
			/// </summary>
			public static readonly TipoDatoPropertyHandler Instance = new TipoDatoPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the Parámetros.TipoDato domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return TipoDatoDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(Parámetros element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.tipoDatoPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(Parámetros element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.tipoDatoPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region TipoParámetro domain property code
		
		/// <summary>
		/// TipoParámetro domain property Id.
		/// </summary>
		public static readonly global::System.Guid TipoParámetroDomainPropertyId = new global::System.Guid(0x513f5724, 0x7f23, 0x4016, 0xb7, 0x19, 0x93, 0x50, 0xeb, 0x48, 0x55, 0x12);
		
		/// <summary>
		/// Storage for TipoParámetro
		/// </summary>
		private TipoParametro tipoParámetroPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of TipoParámetro domain property.
		/// Description for Company.DCMLRACPGProyectoIPS.Parámetros.Tipo Parámetro
		/// </summary>
		[DslDesign::DisplayNameResource("Company.DCMLRACPGProyectoIPS.Parámetros/TipoParámetro.DisplayName", typeof(global::Company.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "Company.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Company.DCMLRACPGProyectoIPS.Parámetros/TipoParámetro.Description", typeof(global::Company.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "Company.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("513f5724-7f23-4016-b719-9350eb485512")]
		public TipoParametro TipoParámetro
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return tipoParámetroPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				TipoParámetroPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the Parámetros.TipoParámetro domain property.
		/// </summary>
		internal sealed partial class TipoParámetroPropertyHandler : DslModeling::DomainPropertyValueHandler<Parámetros, TipoParametro>
		{
			private TipoParámetroPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the Parámetros.TipoParámetro domain property value handler.
			/// </summary>
			public static readonly TipoParámetroPropertyHandler Instance = new TipoParámetroPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the Parámetros.TipoParámetro domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return TipoParámetroDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed TipoParametro GetValue(Parámetros element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.tipoParámetroPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(Parámetros element, TipoParametro newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				TipoParametro oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.tipoParámetroPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region SignaturadeOperación opposite domain role accessor
		/// <summary>
		/// Gets or sets SignaturadeOperación.
		/// Description for
		/// Company.DCMLRACPGProyectoIPS.SignaturadeOperaciónHasParámetros.Parámetros
		/// </summary>
		public virtual SignaturadeOperación SignaturadeOperación
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::Company.DCMLRACPGProyectoIPS.SignaturadeOperaciónHasParámetros.ParámetrosDomainRoleId) as SignaturadeOperación;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::Company.DCMLRACPGProyectoIPS.SignaturadeOperaciónHasParámetros.ParámetrosDomainRoleId, value);
			}
		}
		#endregion
	}
}
namespace Company.DCMLRACPGProyectoIPS
{
	/// <summary>
	/// DomainClass ClaseAbstracta
	/// Description for Company.DCMLRACPGProyectoIPS.ClaseAbstracta
	/// </summary>
	[DslDesign::DisplayNameResource("Company.DCMLRACPGProyectoIPS.ClaseAbstracta.DisplayName", typeof(global::Company.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "Company.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Company.DCMLRACPGProyectoIPS.ClaseAbstracta.Description", typeof(global::Company.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "Company.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Company.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("3dc3c8f3-5cab-47d3-8ee8-e544067b5b4e")]
	public partial class ClaseAbstracta : Clase
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// ClaseAbstracta domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x3dc3c8f3, 0x5cab, 0x47d3, 0x8e, 0xe8, 0xe5, 0x44, 0x06, 0x7b, 0x5b, 0x4e);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public ClaseAbstracta(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public ClaseAbstracta(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region MétodoAbstracto opposite domain role accessor
		
		/// <summary>
		/// Gets a list of MétodoAbstracto.
		/// Description for
		/// Company.DCMLRACPGProyectoIPS.ClaseAbstractaTieneMetodoAbstracto.ClaseAbstracta
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<MétodoAbstracto> MétodoAbstracto
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<MétodoAbstracto>, MétodoAbstracto>(global::Company.DCMLRACPGProyectoIPS.ClaseAbstractaTieneMetodoAbstracto.ClaseAbstractaDomainRoleId);
			}
		}
		#endregion
	}
}
namespace Company.DCMLRACPGProyectoIPS
{
	/// <summary>
	/// DomainClass MétodoAbstracto
	/// Description for Company.DCMLRACPGProyectoIPS.MétodoAbstracto
	/// </summary>
	[DslDesign::DisplayNameResource("Company.DCMLRACPGProyectoIPS.MétodoAbstracto.DisplayName", typeof(global::Company.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "Company.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Company.DCMLRACPGProyectoIPS.MétodoAbstracto.Description", typeof(global::Company.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "Company.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Company.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("5b931a82-9b48-40a7-85d2-8597330d001d")]
	public partial class MétodoAbstracto : SignaturadeOperación
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// MétodoAbstracto domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x5b931a82, 0x9b48, 0x40a7, 0x85, 0xd2, 0x85, 0x97, 0x33, 0x0d, 0x00, 0x1d);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public MétodoAbstracto(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public MétodoAbstracto(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region ClaseAbstracta opposite domain role accessor
		/// <summary>
		/// Gets or sets ClaseAbstracta.
		/// Description for
		/// Company.DCMLRACPGProyectoIPS.ClaseAbstractaTieneMetodoAbstracto.MétodoAbstracto
		/// </summary>
		public virtual ClaseAbstracta ClaseAbstracta
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::Company.DCMLRACPGProyectoIPS.ClaseAbstractaTieneMetodoAbstracto.MétodoAbstractoDomainRoleId) as ClaseAbstracta;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::Company.DCMLRACPGProyectoIPS.ClaseAbstractaTieneMetodoAbstracto.MétodoAbstractoDomainRoleId, value);
			}
		}
		#endregion
	}
}
namespace Company.DCMLRACPGProyectoIPS
{
	/// <summary>
	/// DomainClass ClaseEnriquecida
	/// Description for Company.DCMLRACPGProyectoIPS.ClaseEnriquecida
	/// </summary>
	[DslDesign::DisplayNameResource("Company.DCMLRACPGProyectoIPS.ClaseEnriquecida.DisplayName", typeof(global::Company.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "Company.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Company.DCMLRACPGProyectoIPS.ClaseEnriquecida.Description", typeof(global::Company.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "Company.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Company.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("c66cd2f5-f54f-4640-ba47-6747b82e9758")]
	public abstract partial class ClaseEnriquecida : DslModeling::ModelElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// ClaseEnriquecida domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xc66cd2f5, 0xf54f, 0x4640, 0xba, 0x47, 0x67, 0x47, 0xb8, 0x2e, 0x97, 0x58);
		/// <summary>
		/// Constructor.
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		protected ClaseEnriquecida(DslModeling::Partition partition, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region Enriquecida domain property code
		
		/// <summary>
		/// Enriquecida domain property Id.
		/// </summary>
		public static readonly global::System.Guid EnriquecidaDomainPropertyId = new global::System.Guid(0x88f6a2f7, 0x9607, 0x429b, 0x94, 0x5a, 0x77, 0x93, 0x43, 0x8c, 0x12, 0xa0);
		
		/// <summary>
		/// Storage for Enriquecida
		/// </summary>
		private global::System.Boolean enriquecidaPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of Enriquecida domain property.
		/// Description for Company.DCMLRACPGProyectoIPS.ClaseEnriquecida.Enriquecida
		/// </summary>
		[DslDesign::DisplayNameResource("Company.DCMLRACPGProyectoIPS.ClaseEnriquecida/Enriquecida.DisplayName", typeof(global::Company.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "Company.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Company.DCMLRACPGProyectoIPS.ClaseEnriquecida/Enriquecida.Description", typeof(global::Company.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "Company.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("88f6a2f7-9607-429b-945a-7793438c12a0")]
		public global::System.Boolean Enriquecida
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return enriquecidaPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				EnriquecidaPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the ClaseEnriquecida.Enriquecida domain property.
		/// </summary>
		internal sealed partial class EnriquecidaPropertyHandler : DslModeling::DomainPropertyValueHandler<ClaseEnriquecida, global::System.Boolean>
		{
			private EnriquecidaPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the ClaseEnriquecida.Enriquecida domain property value handler.
			/// </summary>
			public static readonly EnriquecidaPropertyHandler Instance = new EnriquecidaPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the ClaseEnriquecida.Enriquecida domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return EnriquecidaDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Boolean GetValue(ClaseEnriquecida element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.enriquecidaPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(ClaseEnriquecida element, global::System.Boolean newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Boolean oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.enriquecidaPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region FondoColorR domain property code
		
		/// <summary>
		/// FondoColorR domain property Id.
		/// </summary>
		public static readonly global::System.Guid FondoColorRDomainPropertyId = new global::System.Guid(0x5ccc3ca3, 0xd1bd, 0x433e, 0x99, 0x34, 0x5a, 0x8e, 0x2a, 0x98, 0x12, 0x72);
		
		/// <summary>
		/// Storage for FondoColorR
		/// </summary>
		private global::System.Int16 fondoColorRPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of FondoColorR domain property.
		/// Description for Company.DCMLRACPGProyectoIPS.ClaseEnriquecida.Fondo Color R
		/// </summary>
		[DslDesign::DisplayNameResource("Company.DCMLRACPGProyectoIPS.ClaseEnriquecida/FondoColorR.DisplayName", typeof(global::Company.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "Company.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Company.DCMLRACPGProyectoIPS.ClaseEnriquecida/FondoColorR.Description", typeof(global::Company.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "Company.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("5ccc3ca3-d1bd-433e-9934-5a8e2a981272")]
		public global::System.Int16 FondoColorR
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return fondoColorRPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				FondoColorRPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the ClaseEnriquecida.FondoColorR domain property.
		/// </summary>
		internal sealed partial class FondoColorRPropertyHandler : DslModeling::DomainPropertyValueHandler<ClaseEnriquecida, global::System.Int16>
		{
			private FondoColorRPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the ClaseEnriquecida.FondoColorR domain property value handler.
			/// </summary>
			public static readonly FondoColorRPropertyHandler Instance = new FondoColorRPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the ClaseEnriquecida.FondoColorR domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return FondoColorRDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Int16 GetValue(ClaseEnriquecida element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.fondoColorRPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(ClaseEnriquecida element, global::System.Int16 newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Int16 oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.fondoColorRPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region FondoColorG domain property code
		
		/// <summary>
		/// FondoColorG domain property Id.
		/// </summary>
		public static readonly global::System.Guid FondoColorGDomainPropertyId = new global::System.Guid(0xb30bfc13, 0x6bf0, 0x447a, 0xbd, 0xf3, 0xd9, 0x13, 0x56, 0x9a, 0xb0, 0xb0);
		
		/// <summary>
		/// Storage for FondoColorG
		/// </summary>
		private global::System.Int16 fondoColorGPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of FondoColorG domain property.
		/// Description for Company.DCMLRACPGProyectoIPS.ClaseEnriquecida.Fondo Color G
		/// </summary>
		[DslDesign::DisplayNameResource("Company.DCMLRACPGProyectoIPS.ClaseEnriquecida/FondoColorG.DisplayName", typeof(global::Company.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "Company.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Company.DCMLRACPGProyectoIPS.ClaseEnriquecida/FondoColorG.Description", typeof(global::Company.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "Company.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("b30bfc13-6bf0-447a-bdf3-d913569ab0b0")]
		public global::System.Int16 FondoColorG
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return fondoColorGPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				FondoColorGPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the ClaseEnriquecida.FondoColorG domain property.
		/// </summary>
		internal sealed partial class FondoColorGPropertyHandler : DslModeling::DomainPropertyValueHandler<ClaseEnriquecida, global::System.Int16>
		{
			private FondoColorGPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the ClaseEnriquecida.FondoColorG domain property value handler.
			/// </summary>
			public static readonly FondoColorGPropertyHandler Instance = new FondoColorGPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the ClaseEnriquecida.FondoColorG domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return FondoColorGDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Int16 GetValue(ClaseEnriquecida element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.fondoColorGPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(ClaseEnriquecida element, global::System.Int16 newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Int16 oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.fondoColorGPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region FondoColorB domain property code
		
		/// <summary>
		/// FondoColorB domain property Id.
		/// </summary>
		public static readonly global::System.Guid FondoColorBDomainPropertyId = new global::System.Guid(0x67f5c7ad, 0x7cee, 0x452e, 0xb6, 0x0b, 0xce, 0xbd, 0xb3, 0x0d, 0xc9, 0x78);
		
		/// <summary>
		/// Storage for FondoColorB
		/// </summary>
		private global::System.Int16 fondoColorBPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of FondoColorB domain property.
		/// Description for Company.DCMLRACPGProyectoIPS.ClaseEnriquecida.Fondo Color B
		/// </summary>
		[DslDesign::DisplayNameResource("Company.DCMLRACPGProyectoIPS.ClaseEnriquecida/FondoColorB.DisplayName", typeof(global::Company.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "Company.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Company.DCMLRACPGProyectoIPS.ClaseEnriquecida/FondoColorB.Description", typeof(global::Company.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "Company.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("67f5c7ad-7cee-452e-b60b-cebdb30dc978")]
		public global::System.Int16 FondoColorB
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return fondoColorBPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				FondoColorBPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the ClaseEnriquecida.FondoColorB domain property.
		/// </summary>
		internal sealed partial class FondoColorBPropertyHandler : DslModeling::DomainPropertyValueHandler<ClaseEnriquecida, global::System.Int16>
		{
			private FondoColorBPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the ClaseEnriquecida.FondoColorB domain property value handler.
			/// </summary>
			public static readonly FondoColorBPropertyHandler Instance = new FondoColorBPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the ClaseEnriquecida.FondoColorB domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return FondoColorBDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Int16 GetValue(ClaseEnriquecida element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.fondoColorBPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(ClaseEnriquecida element, global::System.Int16 newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Int16 oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.fondoColorBPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region NombreColorR domain property code
		
		/// <summary>
		/// NombreColorR domain property Id.
		/// </summary>
		public static readonly global::System.Guid NombreColorRDomainPropertyId = new global::System.Guid(0xf6ed57a4, 0xa463, 0x40ed, 0xad, 0x7c, 0x46, 0xf3, 0x70, 0x84, 0x53, 0xfb);
		
		/// <summary>
		/// Storage for NombreColorR
		/// </summary>
		private global::System.Int16 nombreColorRPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of NombreColorR domain property.
		/// Description for Company.DCMLRACPGProyectoIPS.ClaseEnriquecida.Nombre Color R
		/// </summary>
		[DslDesign::DisplayNameResource("Company.DCMLRACPGProyectoIPS.ClaseEnriquecida/NombreColorR.DisplayName", typeof(global::Company.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "Company.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Company.DCMLRACPGProyectoIPS.ClaseEnriquecida/NombreColorR.Description", typeof(global::Company.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "Company.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("f6ed57a4-a463-40ed-ad7c-46f3708453fb")]
		public global::System.Int16 NombreColorR
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return nombreColorRPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				NombreColorRPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the ClaseEnriquecida.NombreColorR domain property.
		/// </summary>
		internal sealed partial class NombreColorRPropertyHandler : DslModeling::DomainPropertyValueHandler<ClaseEnriquecida, global::System.Int16>
		{
			private NombreColorRPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the ClaseEnriquecida.NombreColorR domain property value handler.
			/// </summary>
			public static readonly NombreColorRPropertyHandler Instance = new NombreColorRPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the ClaseEnriquecida.NombreColorR domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return NombreColorRDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Int16 GetValue(ClaseEnriquecida element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.nombreColorRPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(ClaseEnriquecida element, global::System.Int16 newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Int16 oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.nombreColorRPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region NombreColorG domain property code
		
		/// <summary>
		/// NombreColorG domain property Id.
		/// </summary>
		public static readonly global::System.Guid NombreColorGDomainPropertyId = new global::System.Guid(0x66f4d9fd, 0x2db6, 0x4ea3, 0xa8, 0xee, 0xf0, 0x2e, 0x98, 0x73, 0x3b, 0xda);
		
		/// <summary>
		/// Storage for NombreColorG
		/// </summary>
		private global::System.Int16 nombreColorGPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of NombreColorG domain property.
		/// Description for Company.DCMLRACPGProyectoIPS.ClaseEnriquecida.Nombre Color G
		/// </summary>
		[DslDesign::DisplayNameResource("Company.DCMLRACPGProyectoIPS.ClaseEnriquecida/NombreColorG.DisplayName", typeof(global::Company.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "Company.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Company.DCMLRACPGProyectoIPS.ClaseEnriquecida/NombreColorG.Description", typeof(global::Company.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "Company.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("66f4d9fd-2db6-4ea3-a8ee-f02e98733bda")]
		public global::System.Int16 NombreColorG
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return nombreColorGPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				NombreColorGPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the ClaseEnriquecida.NombreColorG domain property.
		/// </summary>
		internal sealed partial class NombreColorGPropertyHandler : DslModeling::DomainPropertyValueHandler<ClaseEnriquecida, global::System.Int16>
		{
			private NombreColorGPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the ClaseEnriquecida.NombreColorG domain property value handler.
			/// </summary>
			public static readonly NombreColorGPropertyHandler Instance = new NombreColorGPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the ClaseEnriquecida.NombreColorG domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return NombreColorGDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Int16 GetValue(ClaseEnriquecida element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.nombreColorGPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(ClaseEnriquecida element, global::System.Int16 newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Int16 oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.nombreColorGPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region TipoLetra domain property code
		
		/// <summary>
		/// TipoLetra domain property Id.
		/// </summary>
		public static readonly global::System.Guid TipoLetraDomainPropertyId = new global::System.Guid(0x860d1781, 0x007d, 0x4cfd, 0x81, 0xf5, 0xfb, 0xdc, 0xcd, 0x67, 0xfa, 0x5a);
		
		/// <summary>
		/// Storage for TipoLetra
		/// </summary>
		private TipoLetra tipoLetraPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of TipoLetra domain property.
		/// Description for Company.DCMLRACPGProyectoIPS.ClaseEnriquecida.Tipo Letra
		/// </summary>
		[DslDesign::DisplayNameResource("Company.DCMLRACPGProyectoIPS.ClaseEnriquecida/TipoLetra.DisplayName", typeof(global::Company.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "Company.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Company.DCMLRACPGProyectoIPS.ClaseEnriquecida/TipoLetra.Description", typeof(global::Company.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "Company.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("860d1781-007d-4cfd-81f5-fbdccd67fa5a")]
		public TipoLetra TipoLetra
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return tipoLetraPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				TipoLetraPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the ClaseEnriquecida.TipoLetra domain property.
		/// </summary>
		internal sealed partial class TipoLetraPropertyHandler : DslModeling::DomainPropertyValueHandler<ClaseEnriquecida, TipoLetra>
		{
			private TipoLetraPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the ClaseEnriquecida.TipoLetra domain property value handler.
			/// </summary>
			public static readonly TipoLetraPropertyHandler Instance = new TipoLetraPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the ClaseEnriquecida.TipoLetra domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return TipoLetraDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed TipoLetra GetValue(ClaseEnriquecida element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.tipoLetraPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(ClaseEnriquecida element, TipoLetra newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				TipoLetra oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.tipoLetraPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region Alineacion domain property code
		
		/// <summary>
		/// Alineacion domain property Id.
		/// </summary>
		public static readonly global::System.Guid AlineacionDomainPropertyId = new global::System.Guid(0x033e8b56, 0x3496, 0x4961, 0x92, 0xe0, 0x77, 0x65, 0x37, 0x70, 0x5c, 0xf5);
		
		/// <summary>
		/// Storage for Alineacion
		/// </summary>
		private global::System.String alineacionPropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of Alineacion domain property.
		/// Description for Company.DCMLRACPGProyectoIPS.ClaseEnriquecida.Alineacion
		/// </summary>
		[DslDesign::DisplayNameResource("Company.DCMLRACPGProyectoIPS.ClaseEnriquecida/Alineacion.DisplayName", typeof(global::Company.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "Company.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Company.DCMLRACPGProyectoIPS.ClaseEnriquecida/Alineacion.Description", typeof(global::Company.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "Company.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("033e8b56-3496-4961-92e0-776537705cf5")]
		public global::System.String Alineacion
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return alineacionPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				AlineacionPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the ClaseEnriquecida.Alineacion domain property.
		/// </summary>
		internal sealed partial class AlineacionPropertyHandler : DslModeling::DomainPropertyValueHandler<ClaseEnriquecida, global::System.String>
		{
			private AlineacionPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the ClaseEnriquecida.Alineacion domain property value handler.
			/// </summary>
			public static readonly AlineacionPropertyHandler Instance = new AlineacionPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the ClaseEnriquecida.Alineacion domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return AlineacionDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(ClaseEnriquecida element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.alineacionPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(ClaseEnriquecida element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.alineacionPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region NombreColorB domain property code
		
		/// <summary>
		/// NombreColorB domain property Id.
		/// </summary>
		public static readonly global::System.Guid NombreColorBDomainPropertyId = new global::System.Guid(0x928cb5ab, 0xf401, 0x4238, 0x8f, 0x6b, 0x1a, 0xfc, 0x8b, 0x9b, 0x5f, 0xf0);
		
		/// <summary>
		/// Storage for NombreColorB
		/// </summary>
		private global::System.String nombreColorBPropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of NombreColorB domain property.
		/// Description for Company.DCMLRACPGProyectoIPS.ClaseEnriquecida.Nombre Color B
		/// </summary>
		[DslDesign::DisplayNameResource("Company.DCMLRACPGProyectoIPS.ClaseEnriquecida/NombreColorB.DisplayName", typeof(global::Company.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "Company.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Company.DCMLRACPGProyectoIPS.ClaseEnriquecida/NombreColorB.Description", typeof(global::Company.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "Company.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("928cb5ab-f401-4238-8f6b-1afc8b9b5ff0")]
		public global::System.String NombreColorB
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return nombreColorBPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				NombreColorBPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the ClaseEnriquecida.NombreColorB domain property.
		/// </summary>
		internal sealed partial class NombreColorBPropertyHandler : DslModeling::DomainPropertyValueHandler<ClaseEnriquecida, global::System.String>
		{
			private NombreColorBPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the ClaseEnriquecida.NombreColorB domain property value handler.
			/// </summary>
			public static readonly NombreColorBPropertyHandler Instance = new NombreColorBPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the ClaseEnriquecida.NombreColorB domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return NombreColorBDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(ClaseEnriquecida element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.nombreColorBPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(ClaseEnriquecida element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.nombreColorBPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
	}
}
namespace Company.DCMLRACPGProyectoIPS
{
	/// <summary>
	/// DomainClass AtributoEnriquecido
	/// Description for Company.DCMLRACPGProyectoIPS.AtributoEnriquecido
	/// </summary>
	[DslDesign::DisplayNameResource("Company.DCMLRACPGProyectoIPS.AtributoEnriquecido.DisplayName", typeof(global::Company.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "Company.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Company.DCMLRACPGProyectoIPS.AtributoEnriquecido.Description", typeof(global::Company.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "Company.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Company.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("b5bd1502-5537-4a25-a3b6-2148ca1c9132")]
	public abstract partial class AtributoEnriquecido : DslModeling::ModelElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// AtributoEnriquecido domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xb5bd1502, 0x5537, 0x4a25, 0xa3, 0xb6, 0x21, 0x48, 0xca, 0x1c, 0x91, 0x32);
		/// <summary>
		/// Constructor.
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		protected AtributoEnriquecido(DslModeling::Partition partition, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region ColorLetraR domain property code
		
		/// <summary>
		/// ColorLetraR domain property Id.
		/// </summary>
		public static readonly global::System.Guid ColorLetraRDomainPropertyId = new global::System.Guid(0x443ddca4, 0xdb69, 0x467a, 0x82, 0xda, 0x1e, 0xb2, 0xa0, 0x39, 0x15, 0xe6);
		
		/// <summary>
		/// Storage for ColorLetraR
		/// </summary>
		private global::System.Int16 colorLetraRPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of ColorLetraR domain property.
		/// Description for Company.DCMLRACPGProyectoIPS.AtributoEnriquecido.Color Letra R
		/// </summary>
		[DslDesign::DisplayNameResource("Company.DCMLRACPGProyectoIPS.AtributoEnriquecido/ColorLetraR.DisplayName", typeof(global::Company.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "Company.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Company.DCMLRACPGProyectoIPS.AtributoEnriquecido/ColorLetraR.Description", typeof(global::Company.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "Company.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("443ddca4-db69-467a-82da-1eb2a03915e6")]
		public global::System.Int16 ColorLetraR
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return colorLetraRPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				ColorLetraRPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the AtributoEnriquecido.ColorLetraR domain property.
		/// </summary>
		internal sealed partial class ColorLetraRPropertyHandler : DslModeling::DomainPropertyValueHandler<AtributoEnriquecido, global::System.Int16>
		{
			private ColorLetraRPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the AtributoEnriquecido.ColorLetraR domain property value handler.
			/// </summary>
			public static readonly ColorLetraRPropertyHandler Instance = new ColorLetraRPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the AtributoEnriquecido.ColorLetraR domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return ColorLetraRDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Int16 GetValue(AtributoEnriquecido element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.colorLetraRPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(AtributoEnriquecido element, global::System.Int16 newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Int16 oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.colorLetraRPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region ColorLetraG domain property code
		
		/// <summary>
		/// ColorLetraG domain property Id.
		/// </summary>
		public static readonly global::System.Guid ColorLetraGDomainPropertyId = new global::System.Guid(0xd59e1e69, 0x3cde, 0x4c15, 0xbe, 0xbe, 0xd4, 0x83, 0x46, 0x21, 0x6b, 0x71);
		
		/// <summary>
		/// Storage for ColorLetraG
		/// </summary>
		private global::System.Int16 colorLetraGPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of ColorLetraG domain property.
		/// Description for Company.DCMLRACPGProyectoIPS.AtributoEnriquecido.Color Letra G
		/// </summary>
		[DslDesign::DisplayNameResource("Company.DCMLRACPGProyectoIPS.AtributoEnriquecido/ColorLetraG.DisplayName", typeof(global::Company.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "Company.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Company.DCMLRACPGProyectoIPS.AtributoEnriquecido/ColorLetraG.Description", typeof(global::Company.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "Company.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("d59e1e69-3cde-4c15-bebe-d48346216b71")]
		public global::System.Int16 ColorLetraG
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return colorLetraGPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				ColorLetraGPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the AtributoEnriquecido.ColorLetraG domain property.
		/// </summary>
		internal sealed partial class ColorLetraGPropertyHandler : DslModeling::DomainPropertyValueHandler<AtributoEnriquecido, global::System.Int16>
		{
			private ColorLetraGPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the AtributoEnriquecido.ColorLetraG domain property value handler.
			/// </summary>
			public static readonly ColorLetraGPropertyHandler Instance = new ColorLetraGPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the AtributoEnriquecido.ColorLetraG domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return ColorLetraGDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Int16 GetValue(AtributoEnriquecido element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.colorLetraGPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(AtributoEnriquecido element, global::System.Int16 newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Int16 oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.colorLetraGPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region ColorLetraB domain property code
		
		/// <summary>
		/// ColorLetraB domain property Id.
		/// </summary>
		public static readonly global::System.Guid ColorLetraBDomainPropertyId = new global::System.Guid(0x16556f25, 0x4ff6, 0x4af5, 0xbb, 0x15, 0xeb, 0x13, 0x5e, 0x7f, 0xda, 0xd7);
		
		/// <summary>
		/// Storage for ColorLetraB
		/// </summary>
		private global::System.Int16 colorLetraBPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of ColorLetraB domain property.
		/// Description for Company.DCMLRACPGProyectoIPS.AtributoEnriquecido.Color Letra B
		/// </summary>
		[DslDesign::DisplayNameResource("Company.DCMLRACPGProyectoIPS.AtributoEnriquecido/ColorLetraB.DisplayName", typeof(global::Company.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "Company.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Company.DCMLRACPGProyectoIPS.AtributoEnriquecido/ColorLetraB.Description", typeof(global::Company.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "Company.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("16556f25-4ff6-4af5-bb15-eb135e7fdad7")]
		public global::System.Int16 ColorLetraB
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return colorLetraBPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				ColorLetraBPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the AtributoEnriquecido.ColorLetraB domain property.
		/// </summary>
		internal sealed partial class ColorLetraBPropertyHandler : DslModeling::DomainPropertyValueHandler<AtributoEnriquecido, global::System.Int16>
		{
			private ColorLetraBPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the AtributoEnriquecido.ColorLetraB domain property value handler.
			/// </summary>
			public static readonly ColorLetraBPropertyHandler Instance = new ColorLetraBPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the AtributoEnriquecido.ColorLetraB domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return ColorLetraBDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Int16 GetValue(AtributoEnriquecido element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.colorLetraBPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(AtributoEnriquecido element, global::System.Int16 newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Int16 oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.colorLetraBPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region TipoLetra domain property code
		
		/// <summary>
		/// TipoLetra domain property Id.
		/// </summary>
		public static readonly global::System.Guid TipoLetraDomainPropertyId = new global::System.Guid(0x443c26c1, 0x20d2, 0x4d0a, 0xa9, 0xc2, 0xbf, 0xab, 0x68, 0x12, 0x23, 0x90);
		
		/// <summary>
		/// Storage for TipoLetra
		/// </summary>
		private TipoLetra tipoLetraPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of TipoLetra domain property.
		/// Description for Company.DCMLRACPGProyectoIPS.AtributoEnriquecido.Tipo Letra
		/// </summary>
		[DslDesign::DisplayNameResource("Company.DCMLRACPGProyectoIPS.AtributoEnriquecido/TipoLetra.DisplayName", typeof(global::Company.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "Company.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Company.DCMLRACPGProyectoIPS.AtributoEnriquecido/TipoLetra.Description", typeof(global::Company.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "Company.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("443c26c1-20d2-4d0a-a9c2-bfab68122390")]
		public TipoLetra TipoLetra
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return tipoLetraPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				TipoLetraPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the AtributoEnriquecido.TipoLetra domain property.
		/// </summary>
		internal sealed partial class TipoLetraPropertyHandler : DslModeling::DomainPropertyValueHandler<AtributoEnriquecido, TipoLetra>
		{
			private TipoLetraPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the AtributoEnriquecido.TipoLetra domain property value handler.
			/// </summary>
			public static readonly TipoLetraPropertyHandler Instance = new TipoLetraPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the AtributoEnriquecido.TipoLetra domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return TipoLetraDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed TipoLetra GetValue(AtributoEnriquecido element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.tipoLetraPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(AtributoEnriquecido element, TipoLetra newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				TipoLetra oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.tipoLetraPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region FormatoBooleano domain property code
		
		/// <summary>
		/// FormatoBooleano domain property Id.
		/// </summary>
		public static readonly global::System.Guid FormatoBooleanoDomainPropertyId = new global::System.Guid(0x5f8fbbb3, 0xc1c2, 0x4751, 0x98, 0xcf, 0xd5, 0x31, 0x88, 0xa3, 0x32, 0x81);
		
		/// <summary>
		/// Storage for FormatoBooleano
		/// </summary>
		private FormatoBoolean formatoBooleanoPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of FormatoBooleano domain property.
		/// Description for Company.DCMLRACPGProyectoIPS.AtributoEnriquecido.Formato
		/// Booleano
		/// </summary>
		[DslDesign::DisplayNameResource("Company.DCMLRACPGProyectoIPS.AtributoEnriquecido/FormatoBooleano.DisplayName", typeof(global::Company.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "Company.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Company.DCMLRACPGProyectoIPS.AtributoEnriquecido/FormatoBooleano.Description", typeof(global::Company.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "Company.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("5f8fbbb3-c1c2-4751-98cf-d53188a33281")]
		public FormatoBoolean FormatoBooleano
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return formatoBooleanoPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				FormatoBooleanoPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the AtributoEnriquecido.FormatoBooleano domain property.
		/// </summary>
		internal sealed partial class FormatoBooleanoPropertyHandler : DslModeling::DomainPropertyValueHandler<AtributoEnriquecido, FormatoBoolean>
		{
			private FormatoBooleanoPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the AtributoEnriquecido.FormatoBooleano domain property value handler.
			/// </summary>
			public static readonly FormatoBooleanoPropertyHandler Instance = new FormatoBooleanoPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the AtributoEnriquecido.FormatoBooleano domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return FormatoBooleanoDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed FormatoBoolean GetValue(AtributoEnriquecido element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.formatoBooleanoPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(AtributoEnriquecido element, FormatoBoolean newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				FormatoBoolean oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.formatoBooleanoPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region Enriquecido domain property code
		
		/// <summary>
		/// Enriquecido domain property Id.
		/// </summary>
		public static readonly global::System.Guid EnriquecidoDomainPropertyId = new global::System.Guid(0xa28f1e67, 0xbb6f, 0x4a9e, 0xb8, 0x5f, 0x02, 0x8c, 0xa5, 0x12, 0x3b, 0xfe);
		
		/// <summary>
		/// Storage for Enriquecido
		/// </summary>
		private global::System.Boolean enriquecidoPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of Enriquecido domain property.
		/// Description for Company.DCMLRACPGProyectoIPS.AtributoEnriquecido.Enriquecido
		/// </summary>
		[DslDesign::DisplayNameResource("Company.DCMLRACPGProyectoIPS.AtributoEnriquecido/Enriquecido.DisplayName", typeof(global::Company.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "Company.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Company.DCMLRACPGProyectoIPS.AtributoEnriquecido/Enriquecido.Description", typeof(global::Company.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "Company.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("a28f1e67-bb6f-4a9e-b85f-028ca5123bfe")]
		public global::System.Boolean Enriquecido
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return enriquecidoPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				EnriquecidoPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the AtributoEnriquecido.Enriquecido domain property.
		/// </summary>
		internal sealed partial class EnriquecidoPropertyHandler : DslModeling::DomainPropertyValueHandler<AtributoEnriquecido, global::System.Boolean>
		{
			private EnriquecidoPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the AtributoEnriquecido.Enriquecido domain property value handler.
			/// </summary>
			public static readonly EnriquecidoPropertyHandler Instance = new EnriquecidoPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the AtributoEnriquecido.Enriquecido domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return EnriquecidoDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Boolean GetValue(AtributoEnriquecido element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.enriquecidoPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(AtributoEnriquecido element, global::System.Boolean newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Boolean oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.enriquecidoPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
	}
}
namespace Company.DCMLRACPGProyectoIPS
{
	/// <summary>
	/// DomainClass MetodoEnriquecido
	/// Description for Company.DCMLRACPGProyectoIPS.MetodoEnriquecido
	/// </summary>
	[DslDesign::DisplayNameResource("Company.DCMLRACPGProyectoIPS.MetodoEnriquecido.DisplayName", typeof(global::Company.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "Company.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Company.DCMLRACPGProyectoIPS.MetodoEnriquecido.Description", typeof(global::Company.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "Company.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Company.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("9c1db50c-8495-47ae-b286-2c64acb6659c")]
	public abstract partial class MetodoEnriquecido : DslModeling::ModelElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// MetodoEnriquecido domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x9c1db50c, 0x8495, 0x47ae, 0xb2, 0x86, 0x2c, 0x64, 0xac, 0xb6, 0x65, 0x9c);
		/// <summary>
		/// Constructor.
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		protected MetodoEnriquecido(DslModeling::Partition partition, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region TipoLetra domain property code
		
		/// <summary>
		/// TipoLetra domain property Id.
		/// </summary>
		public static readonly global::System.Guid TipoLetraDomainPropertyId = new global::System.Guid(0xc0617e1c, 0x991a, 0x46c5, 0x9f, 0xb4, 0x49, 0xdf, 0x0b, 0xe5, 0x0d, 0x62);
		
		/// <summary>
		/// Storage for TipoLetra
		/// </summary>
		private TipoLetra tipoLetraPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of TipoLetra domain property.
		/// Description for Company.DCMLRACPGProyectoIPS.MetodoEnriquecido.Tipo Letra
		/// </summary>
		[DslDesign::DisplayNameResource("Company.DCMLRACPGProyectoIPS.MetodoEnriquecido/TipoLetra.DisplayName", typeof(global::Company.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "Company.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Company.DCMLRACPGProyectoIPS.MetodoEnriquecido/TipoLetra.Description", typeof(global::Company.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "Company.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("c0617e1c-991a-46c5-9fb4-49df0be50d62")]
		public TipoLetra TipoLetra
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return tipoLetraPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				TipoLetraPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the MetodoEnriquecido.TipoLetra domain property.
		/// </summary>
		internal sealed partial class TipoLetraPropertyHandler : DslModeling::DomainPropertyValueHandler<MetodoEnriquecido, TipoLetra>
		{
			private TipoLetraPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the MetodoEnriquecido.TipoLetra domain property value handler.
			/// </summary>
			public static readonly TipoLetraPropertyHandler Instance = new TipoLetraPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the MetodoEnriquecido.TipoLetra domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return TipoLetraDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed TipoLetra GetValue(MetodoEnriquecido element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.tipoLetraPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(MetodoEnriquecido element, TipoLetra newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				TipoLetra oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.tipoLetraPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region ColorLetraR domain property code
		
		/// <summary>
		/// ColorLetraR domain property Id.
		/// </summary>
		public static readonly global::System.Guid ColorLetraRDomainPropertyId = new global::System.Guid(0x30e0c98d, 0xcdca, 0x4c83, 0x93, 0x54, 0xa7, 0xed, 0x94, 0xa3, 0x91, 0xf9);
		
		/// <summary>
		/// Storage for ColorLetraR
		/// </summary>
		private global::System.Int16 colorLetraRPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of ColorLetraR domain property.
		/// Description for Company.DCMLRACPGProyectoIPS.MetodoEnriquecido.Color Letra R
		/// </summary>
		[DslDesign::DisplayNameResource("Company.DCMLRACPGProyectoIPS.MetodoEnriquecido/ColorLetraR.DisplayName", typeof(global::Company.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "Company.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Company.DCMLRACPGProyectoIPS.MetodoEnriquecido/ColorLetraR.Description", typeof(global::Company.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "Company.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("30e0c98d-cdca-4c83-9354-a7ed94a391f9")]
		public global::System.Int16 ColorLetraR
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return colorLetraRPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				ColorLetraRPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the MetodoEnriquecido.ColorLetraR domain property.
		/// </summary>
		internal sealed partial class ColorLetraRPropertyHandler : DslModeling::DomainPropertyValueHandler<MetodoEnriquecido, global::System.Int16>
		{
			private ColorLetraRPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the MetodoEnriquecido.ColorLetraR domain property value handler.
			/// </summary>
			public static readonly ColorLetraRPropertyHandler Instance = new ColorLetraRPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the MetodoEnriquecido.ColorLetraR domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return ColorLetraRDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Int16 GetValue(MetodoEnriquecido element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.colorLetraRPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(MetodoEnriquecido element, global::System.Int16 newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Int16 oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.colorLetraRPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region ColorLetraG domain property code
		
		/// <summary>
		/// ColorLetraG domain property Id.
		/// </summary>
		public static readonly global::System.Guid ColorLetraGDomainPropertyId = new global::System.Guid(0xaf08deff, 0x00e8, 0x4f5b, 0x9f, 0x7f, 0x11, 0x1d, 0x71, 0xd5, 0x6a, 0xb2);
		
		/// <summary>
		/// Storage for ColorLetraG
		/// </summary>
		private global::System.Int16 colorLetraGPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of ColorLetraG domain property.
		/// Description for Company.DCMLRACPGProyectoIPS.MetodoEnriquecido.Color Letra G
		/// </summary>
		[DslDesign::DisplayNameResource("Company.DCMLRACPGProyectoIPS.MetodoEnriquecido/ColorLetraG.DisplayName", typeof(global::Company.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "Company.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Company.DCMLRACPGProyectoIPS.MetodoEnriquecido/ColorLetraG.Description", typeof(global::Company.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "Company.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("af08deff-00e8-4f5b-9f7f-111d71d56ab2")]
		public global::System.Int16 ColorLetraG
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return colorLetraGPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				ColorLetraGPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the MetodoEnriquecido.ColorLetraG domain property.
		/// </summary>
		internal sealed partial class ColorLetraGPropertyHandler : DslModeling::DomainPropertyValueHandler<MetodoEnriquecido, global::System.Int16>
		{
			private ColorLetraGPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the MetodoEnriquecido.ColorLetraG domain property value handler.
			/// </summary>
			public static readonly ColorLetraGPropertyHandler Instance = new ColorLetraGPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the MetodoEnriquecido.ColorLetraG domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return ColorLetraGDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Int16 GetValue(MetodoEnriquecido element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.colorLetraGPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(MetodoEnriquecido element, global::System.Int16 newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Int16 oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.colorLetraGPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region ColorLetraB domain property code
		
		/// <summary>
		/// ColorLetraB domain property Id.
		/// </summary>
		public static readonly global::System.Guid ColorLetraBDomainPropertyId = new global::System.Guid(0x0c3ed103, 0xf84d, 0x4d84, 0x94, 0x6a, 0x32, 0x68, 0xdf, 0x8c, 0x0b, 0x03);
		
		/// <summary>
		/// Storage for ColorLetraB
		/// </summary>
		private global::System.Int16 colorLetraBPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of ColorLetraB domain property.
		/// Description for Company.DCMLRACPGProyectoIPS.MetodoEnriquecido.Color Letra B
		/// </summary>
		[DslDesign::DisplayNameResource("Company.DCMLRACPGProyectoIPS.MetodoEnriquecido/ColorLetraB.DisplayName", typeof(global::Company.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "Company.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Company.DCMLRACPGProyectoIPS.MetodoEnriquecido/ColorLetraB.Description", typeof(global::Company.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "Company.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("0c3ed103-f84d-4d84-946a-3268df8c0b03")]
		public global::System.Int16 ColorLetraB
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return colorLetraBPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				ColorLetraBPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the MetodoEnriquecido.ColorLetraB domain property.
		/// </summary>
		internal sealed partial class ColorLetraBPropertyHandler : DslModeling::DomainPropertyValueHandler<MetodoEnriquecido, global::System.Int16>
		{
			private ColorLetraBPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the MetodoEnriquecido.ColorLetraB domain property value handler.
			/// </summary>
			public static readonly ColorLetraBPropertyHandler Instance = new ColorLetraBPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the MetodoEnriquecido.ColorLetraB domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return ColorLetraBDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Int16 GetValue(MetodoEnriquecido element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.colorLetraBPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(MetodoEnriquecido element, global::System.Int16 newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Int16 oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.colorLetraBPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region Enriquecido domain property code
		
		/// <summary>
		/// Enriquecido domain property Id.
		/// </summary>
		public static readonly global::System.Guid EnriquecidoDomainPropertyId = new global::System.Guid(0xd1745f2c, 0xeaa0, 0x4703, 0x83, 0x61, 0x33, 0xc9, 0x5d, 0x6d, 0x93, 0x54);
		
		/// <summary>
		/// Storage for Enriquecido
		/// </summary>
		private global::System.Boolean enriquecidoPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of Enriquecido domain property.
		/// Description for Company.DCMLRACPGProyectoIPS.MetodoEnriquecido.Enriquecido
		/// </summary>
		[DslDesign::DisplayNameResource("Company.DCMLRACPGProyectoIPS.MetodoEnriquecido/Enriquecido.DisplayName", typeof(global::Company.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "Company.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Company.DCMLRACPGProyectoIPS.MetodoEnriquecido/Enriquecido.Description", typeof(global::Company.DCMLRACPGProyectoIPS.DCMLRACPGProyectoIPSDomainModel), "Company.DCMLRACPGProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("d1745f2c-eaa0-4703-8361-33c95d6d9354")]
		public global::System.Boolean Enriquecido
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return enriquecidoPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				EnriquecidoPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the MetodoEnriquecido.Enriquecido domain property.
		/// </summary>
		internal sealed partial class EnriquecidoPropertyHandler : DslModeling::DomainPropertyValueHandler<MetodoEnriquecido, global::System.Boolean>
		{
			private EnriquecidoPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the MetodoEnriquecido.Enriquecido domain property value handler.
			/// </summary>
			public static readonly EnriquecidoPropertyHandler Instance = new EnriquecidoPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the MetodoEnriquecido.Enriquecido domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return EnriquecidoDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Boolean GetValue(MetodoEnriquecido element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.enriquecidoPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(MetodoEnriquecido element, global::System.Boolean newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Boolean oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.enriquecidoPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
	}
}
